{"ast":null,"code":"import _slicedToArray from \"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/filters/main-filters/index.js\";\nimport React, { useContext } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { store } from 'context/store';\nimport styled from 'styled-components'; // Project Imports\n\nimport SelectProduct from './SelectProduct';\nimport SelectItinerary from './SelectItinerary';\nimport SelectShip from './SelectShip';\nimport PeerGroupToggle from './PeerGroupToggle';\nimport SelectSailDate from './SelectSailDate';\nimport Button from 'components/common/Button';\nimport CsvDownload from './CsvDownload';\nimport { getFilterVariables } from 'helper'; // Graphql\n\nimport { GET_VISUAL_DECK_LIST } from 'graphql/queries';\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: rgb(0, 0, 0, 0);\n  color: ${props => props.theme.jungleMist};\n  padding: 1em 0em;\n  > div {\n    margin-right: 2em;\n  }\n`;\nconst Apply = styled(Button)`\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  background-color: ${props => props.theme.lochmara};\n  color: ${props => props.theme.white};\n`;\n\nconst MainFilters = () => {\n  const globalState = useContext(store);\n  const state = globalState.state,\n        dispatch = globalState.dispatch;\n  const selectedShip = state.selectedShip,\n        selectedProduct = state.selectedProduct,\n        selectedItinerary = state.selectedItinerary,\n        selectedSailDate = state.selectedSailDate,\n        selectedBookingWeek = state.selectedBookingWeek,\n        peerGroupFilters = state.peerGroupFilters,\n        selectedPeerShip = state.selectedPeerShip,\n        selectedPeerProduct = state.selectedPeerProduct,\n        selectedPeerSailingDates = state.selectedPeerSailingDates,\n        filter = state.filter,\n        peerFilter = state.peerFilter,\n        filterCount = state.filterCount;\n\n  const _useLazyQuery = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({\n        type: 'setShipData',\n        value: data.deckVisualList\n      });\n    },\n    fetchPolicy: 'network-only'\n  }),\n        _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n        applyFilters = _useLazyQuery2[0];\n\n  const enableApply = () => selectedShip && selectedProduct && selectedItinerary && selectedSailDate;\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(PeerGroupToggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(SelectShip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(SelectProduct, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(SelectItinerary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(SelectSailDate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Apply, {\n    primary: true,\n    disabled: !enableApply(),\n    onClick: () => applyFilters({\n      variables: getFilterVariables(selectedShip.id, selectedSailDate.id, selectedBookingWeek, selectedProduct.id, selectedItinerary.id, peerGroupFilters, selectedPeerShip, selectedPeerProduct.id, selectedPeerSailingDates[0], selectedPeerSailingDates[1], filter, peerFilter, filterCount)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Apply\"), React.createElement(CsvDownload, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default MainFilters;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/filters/main-filters/index.js"],"names":["React","useContext","useLazyQuery","store","styled","SelectProduct","SelectItinerary","SelectShip","PeerGroupToggle","SelectSailDate","Button","CsvDownload","getFilterVariables","GET_VISUAL_DECK_LIST","Container","div","props","theme","jungleMist","Apply","disabled","lochmara","white","MainFilters","globalState","state","dispatch","selectedShip","selectedProduct","selectedItinerary","selectedSailDate","selectedBookingWeek","peerGroupFilters","selectedPeerShip","selectedPeerProduct","selectedPeerSailingDates","filter","peerFilter","filterCount","onCompleted","data","type","value","deckVisualList","fetchPolicy","applyFilters","enableApply","variables","id"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useLazyQuery } from '@apollo/client'\nimport { store } from 'context/store'\nimport styled from 'styled-components'\n\n// Project Imports\nimport SelectProduct from './SelectProduct'\nimport SelectItinerary from './SelectItinerary'\nimport SelectShip from './SelectShip'\nimport PeerGroupToggle from './PeerGroupToggle'\nimport SelectSailDate from './SelectSailDate'\nimport Button from 'components/common/Button'\nimport CsvDownload from './CsvDownload'\nimport { getFilterVariables } from 'helper'\n\n// Graphql\nimport { GET_VISUAL_DECK_LIST } from 'graphql/queries'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: rgb(0, 0, 0, 0);\n  color: ${props => props.theme.jungleMist};\n  padding: 1em 0em;\n  > div {\n    margin-right: 2em;\n  }\n`\n\nconst Apply = styled(Button)`\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  background-color: ${props => props.theme.lochmara};\n  color: ${props => props.theme.white};\n`\n\nconst MainFilters = () => {\n  const globalState = useContext(store)\n  const { state, dispatch } = globalState\n  const {\n    selectedShip,\n    selectedProduct,\n    selectedItinerary,\n    selectedSailDate,\n    selectedBookingWeek,\n    peerGroupFilters,\n    selectedPeerShip,\n    selectedPeerProduct,\n    selectedPeerSailingDates,\n    filter,\n    peerFilter,\n    filterCount\n  } = state\n  const [applyFilters] = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({ type: 'setShipData', value: data.deckVisualList })\n    },\n    fetchPolicy: 'network-only'\n  })\n\n  const enableApply = () =>\n    selectedShip && selectedProduct && selectedItinerary && selectedSailDate\n\n  return (\n    <Container>\n      <PeerGroupToggle />\n      <SelectShip />\n      <SelectProduct />\n      <SelectItinerary />\n      <SelectSailDate />\n      <Apply\n        primary\n        disabled={!enableApply()}\n        onClick={() =>\n          applyFilters({\n            variables: getFilterVariables(\n              selectedShip.id,\n              selectedSailDate.id,\n              selectedBookingWeek,\n              selectedProduct.id,\n              selectedItinerary.id,\n              peerGroupFilters,\n              selectedPeerShip,\n              selectedPeerProduct.id,\n              selectedPeerSailingDates[0],\n              selectedPeerSailingDates[1],\n              filter,\n              peerFilter,\n              filterCount\n            )\n          })\n        }\n      >\n        Apply\n      </Apply>\n      <CsvDownload />\n    </Container>\n  )\n}\n\nexport default MainFilters\n"]},"metadata":{},"sourceType":"module"}