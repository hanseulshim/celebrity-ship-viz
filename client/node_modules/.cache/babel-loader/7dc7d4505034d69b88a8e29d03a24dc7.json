{"ast":null,"code":"var _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/filters/peer-group-filters/SelectPeerSailingDates.js\";\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { DatePicker } from 'antd';\nimport { store } from 'context/store';\nimport moment from 'moment';\nconst RangePicker = DatePicker.RangePicker;\nconst StyledRangePicker = styled(RangePicker)`\n  .ant-input {\n    background-color: ${props => props.theme.black50};\n    color: ${props => props.theme.white};\n    border: 1px solid ${props => props.theme.biscay};\n  }\n  .ant-calendar-range-picker-separator {\n    color: ${props => props.theme.white};\n  }\n\n  .ant-calendar-picker-icon {\n    color: ${props => props.theme.white};\n  }\n\n  .ant-calendar-picker-clear {\n    color: ${props => props.theme.white};\n  }\n`;\n\nconst SelectPeerSailingDates = () => {\n  const globalState = useContext(store);\n  const state = globalState.state,\n        dispatch = globalState.dispatch;\n  const selectedPeerSailingDates = state.selectedPeerSailingDates;\n\n  const onChange = (date, dateString) => {\n    if (date.length) {\n      dispatch({\n        type: 'setSelectedPeerSailingDates',\n        value: dateString\n      });\n    } else dispatch({\n      type: 'setSelectedPeerSailingDates',\n      value: []\n    });\n  };\n\n  return React.createElement(StyledRangePicker, {\n    format: 'YYYY/MM/DD',\n    onChange: onChange,\n    value: selectedPeerSailingDates.length ? [moment(selectedPeerSailingDates[0]), moment(selectedPeerSailingDates[1])] : [],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};\n\nexport default SelectPeerSailingDates;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/filters/peer-group-filters/SelectPeerSailingDates.js"],"names":["React","useContext","styled","DatePicker","store","moment","RangePicker","StyledRangePicker","props","theme","black50","white","biscay","SelectPeerSailingDates","globalState","state","dispatch","selectedPeerSailingDates","onChange","date","dateString","length","type","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;MAEQC,W,GAAgBH,U,CAAhBG,W;AAER,MAAMC,iBAAiB,GAAGL,MAAM,CAACI,WAAD,CAAc;;wBAEtBE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAQ;aACxCF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;wBAChBH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,MAAO;;;aAGvCJ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;;;;aAI3BH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;;;;aAI3BH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;;CAfxC;;AAmBA,MAAME,sBAAsB,GAAG,MAAM;AACnC,QAAMC,WAAW,GAAGb,UAAU,CAACG,KAAD,CAA9B;AADmC,QAE3BW,KAF2B,GAEPD,WAFO,CAE3BC,KAF2B;AAAA,QAEpBC,QAFoB,GAEPF,WAFO,CAEpBE,QAFoB;AAAA,QAG3BC,wBAH2B,GAGEF,KAHF,CAG3BE,wBAH2B;;AAKnC,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AACrC,QAAID,IAAI,CAACE,MAAT,EAAiB;AACfL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,6BAAR;AAAuCC,QAAAA,KAAK,EAAEH;AAA9C,OAAD,CAAR;AACD,KAFD,MAEOJ,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,6BAAR;AAAuCC,MAAAA,KAAK,EAAE;AAA9C,KAAD,CAAR;AACR,GAJD;;AAMA,SACE,oBAAC,iBAAD;AACE,IAAA,MAAM,EAAE,YADV;AAEE,IAAA,QAAQ,EAAEL,QAFZ;AAGE,IAAA,KAAK,EACHD,wBAAwB,CAACI,MAAzB,GACI,CACEhB,MAAM,CAACY,wBAAwB,CAAC,CAAD,CAAzB,CADR,EAEEZ,MAAM,CAACY,wBAAwB,CAAC,CAAD,CAAzB,CAFR,CADJ,GAKI,EATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAzBD;;AA2BA,eAAeJ,sBAAf","sourcesContent":["import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { DatePicker } from 'antd'\nimport { store } from 'context/store'\nimport moment from 'moment'\n\nconst { RangePicker } = DatePicker\n\nconst StyledRangePicker = styled(RangePicker)`\n  .ant-input {\n    background-color: ${props => props.theme.black50};\n    color: ${props => props.theme.white};\n    border: 1px solid ${props => props.theme.biscay};\n  }\n  .ant-calendar-range-picker-separator {\n    color: ${props => props.theme.white};\n  }\n\n  .ant-calendar-picker-icon {\n    color: ${props => props.theme.white};\n  }\n\n  .ant-calendar-picker-clear {\n    color: ${props => props.theme.white};\n  }\n`\n\nconst SelectPeerSailingDates = () => {\n  const globalState = useContext(store)\n  const { state, dispatch } = globalState\n  const { selectedPeerSailingDates } = state\n\n  const onChange = (date, dateString) => {\n    if (date.length) {\n      dispatch({ type: 'setSelectedPeerSailingDates', value: dateString })\n    } else dispatch({ type: 'setSelectedPeerSailingDates', value: [] })\n  }\n\n  return (\n    <StyledRangePicker\n      format={'YYYY/MM/DD'}\n      onChange={onChange}\n      value={\n        selectedPeerSailingDates.length\n          ? [\n              moment(selectedPeerSailingDates[0]),\n              moment(selectedPeerSailingDates[1])\n            ]\n          : []\n      }\n    />\n  )\n}\n\nexport default SelectPeerSailingDates\n"]},"metadata":{},"sourceType":"module"}