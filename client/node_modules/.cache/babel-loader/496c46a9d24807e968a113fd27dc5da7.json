{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  margin-top: 100px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import Header from'./main/Header';import{Form,Icon,Input,Button}from'antd';var Container=styled.div(_templateObject());var hasErrors=function hasErrors(fieldsError){return Object.keys(fieldsError).some(function(field){return fieldsError[field];});};var HorizontalLoginForm=function HorizontalLoginForm(_ref){var form=_ref.form,setPassword=_ref.setPassword;var handleSubmit=function handleSubmit(e){e.preventDefault();form.validateFields(function(err,values){if(!err){setPassword(values.password);}});};var getFieldDecorator=form.getFieldDecorator,getFieldsError=form.getFieldsError,getFieldError=form.getFieldError,isFieldTouched=form.isFieldTouched;// Only show error after a field is touched.\nvar passwordError=isFieldTouched('password')&&getFieldError('password');return React.createElement(React.Fragment,null,React.createElement(Header,null),React.createElement(Container,null,React.createElement(Form,{layout:\"inline\",onSubmit:function onSubmit(e){return handleSubmit(e);}},React.createElement(Form.Item,{validateStatus:passwordError?'error':'',help:passwordError||''},getFieldDecorator('password',{rules:[{required:true,message:'Please input your Password!'}]})(React.createElement(Input,{prefix:React.createElement(Icon,{type:\"lock\",style:{color:'rgba(0,0,0,.25)'}}),type:\"password\",placeholder:\"Password\"}))),React.createElement(Form.Item,null,React.createElement(Button,{type:\"primary\",htmlType:\"submit\",disabled:hasErrors(getFieldsError())},\"Log in\")))));};var WrappedHorizontalLoginForm=Form.create({name:'horizontal_login'})(HorizontalLoginForm);export default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/Login.js"],"names":["React","styled","Header","Form","Icon","Input","Button","Container","div","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","form","setPassword","handleSubmit","e","preventDefault","validateFields","err","values","password","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","passwordError","rules","required","message","color","WrappedHorizontalLoginForm","create","name"],"mappings":"uUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CAEA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,KAArB,CAA4BC,MAA5B,KAA0C,MAA1C,CAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,mBAAf,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,WAAW,CAAI,CAC/B,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8B,SAAAC,KAAK,QAAIJ,CAAAA,WAAW,CAACI,KAAD,CAAf,EAAnC,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAA2B,IAAxBC,CAAAA,IAAwB,MAAxBA,IAAwB,CAAlBC,WAAkB,MAAlBA,WAAkB,CACrD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAF,GACAJ,IAAI,CAACK,cAAL,CAAoB,SAACC,GAAD,CAAMC,MAAN,CAAiB,CACnC,GAAI,CAACD,GAAL,CAAU,CACRL,WAAW,CAACM,MAAM,CAACC,QAAR,CAAX,CACD,CACF,CAJD,EAKD,CAPD,CADqD,GAUnDC,CAAAA,iBAVmD,CAcjDT,IAdiD,CAUnDS,iBAVmD,CAWnDC,cAXmD,CAcjDV,IAdiD,CAWnDU,cAXmD,CAYnDC,aAZmD,CAcjDX,IAdiD,CAYnDW,aAZmD,CAanDC,cAbmD,CAcjDZ,IAdiD,CAanDY,cAbmD,CAgBrD;AACA,GAAMC,CAAAA,aAAa,CAAGD,cAAc,CAAC,UAAD,CAAd,EAA8BD,aAAa,CAAC,UAAD,CAAjE,CACA,MACE,yCACE,oBAAC,MAAD,MADF,CAEE,oBAAC,SAAD,MACE,oBAAC,IAAD,EAAM,MAAM,CAAC,QAAb,CAAsB,QAAQ,CAAE,kBAAAR,CAAC,QAAID,CAAAA,YAAY,CAACC,CAAD,CAAhB,EAAjC,EACE,oBAAC,IAAD,CAAM,IAAN,EACE,cAAc,CAAEU,aAAa,CAAG,OAAH,CAAa,EAD5C,CAEE,IAAI,CAAEA,aAAa,EAAI,EAFzB,EAIGJ,iBAAiB,CAAC,UAAD,CAAa,CAC7BK,KAAK,CAAE,CACL,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,6BAA3B,CADK,CADsB,CAAb,CAAjB,CAKC,oBAAC,KAAD,EACE,MAAM,CACJ,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,KAAK,CAAE,CAAEC,KAAK,CAAE,iBAAT,CAAzB,EAFJ,CAIE,IAAI,CAAC,UAJP,CAKE,WAAW,CAAC,UALd,EALD,CAJH,CADF,CAmBE,oBAAC,IAAD,CAAM,IAAN,MACE,oBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAEE,QAAQ,CAAC,QAFX,CAGE,QAAQ,CAAExB,SAAS,CAACiB,cAAc,EAAf,CAHrB,WADF,CAnBF,CADF,CAFF,CADF,CAoCD,CAtDD,CAwDA,GAAMQ,CAAAA,0BAA0B,CAAG/B,IAAI,CAACgC,MAAL,CAAY,CAAEC,IAAI,CAAE,kBAAR,CAAZ,EACjCrB,mBADiC,CAAnC,CAIA,cAAemB,CAAAA,0BAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Header from './main/Header'\n\nimport { Form, Icon, Input, Button } from 'antd'\n\nconst Container = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`\n\nconst hasErrors = fieldsError => {\n  return Object.keys(fieldsError).some(field => fieldsError[field])\n}\n\nconst HorizontalLoginForm = ({ form, setPassword }) => {\n  const handleSubmit = e => {\n    e.preventDefault()\n    form.validateFields((err, values) => {\n      if (!err) {\n        setPassword(values.password)\n      }\n    })\n  }\n  const {\n    getFieldDecorator,\n    getFieldsError,\n    getFieldError,\n    isFieldTouched\n  } = form\n\n  // Only show error after a field is touched.\n  const passwordError = isFieldTouched('password') && getFieldError('password')\n  return (\n    <>\n      <Header />\n      <Container>\n        <Form layout=\"inline\" onSubmit={e => handleSubmit(e)}>\n          <Form.Item\n            validateStatus={passwordError ? 'error' : ''}\n            help={passwordError || ''}\n          >\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, message: 'Please input your Password!' }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={hasErrors(getFieldsError())}\n            >\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n      </Container>\n    </>\n  )\n}\n\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(\n  HorizontalLoginForm\n)\n\nexport default WrappedHorizontalLoginForm\n"]},"metadata":{},"sourceType":"module"}