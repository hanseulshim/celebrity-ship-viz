{"ast":null,"code":"var _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/Login.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Header from './main/Header';\nimport { Form, Icon, Input, Button } from 'antd';\nconst Container = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n\nconst hasErrors = fieldsError => {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n};\n\nconst HorizontalLoginForm = ({\n  form,\n  setPassword\n}) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        setPassword(values.password);\n      }\n    });\n  };\n\n  const getFieldDecorator = form.getFieldDecorator,\n        getFieldsError = form.getFieldsError,\n        getFieldError = form.getFieldError,\n        isFieldTouched = form.isFieldTouched; // Only show error after a field is touched.\n\n  const passwordError = isFieldTouched('password') && getFieldError('password');\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form, {\n    layout: \"inline\",\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    validateStatus: passwordError ? 'error' : '',\n    help: passwordError || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: hasErrors(getFieldsError()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Log in\")))));\n};\n\nconst WrappedHorizontalLoginForm = Form.create({\n  name: 'horizontal_login'\n})(HorizontalLoginForm);\nexport default WrappedHorizontalLoginForm;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/Login.js"],"names":["React","styled","Header","Form","Icon","Input","Button","Container","div","hasErrors","fieldsError","Object","keys","some","field","HorizontalLoginForm","form","setPassword","handleSubmit","e","preventDefault","validateFields","err","values","password","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","passwordError","rules","required","message","color","WrappedHorizontalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Header from './main/Header'\n\nimport { Form, Icon, Input, Button } from 'antd'\n\nconst Container = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`\n\nconst hasErrors = fieldsError => {\n  return Object.keys(fieldsError).some(field => fieldsError[field])\n}\n\nconst HorizontalLoginForm = ({ form, setPassword }) => {\n  const handleSubmit = e => {\n    e.preventDefault()\n    form.validateFields((err, values) => {\n      if (!err) {\n        setPassword(values.password)\n      }\n    })\n  }\n  const {\n    getFieldDecorator,\n    getFieldsError,\n    getFieldError,\n    isFieldTouched\n  } = form\n\n  // Only show error after a field is touched.\n  const passwordError = isFieldTouched('password') && getFieldError('password')\n  return (\n    <>\n      <Header />\n      <Container>\n        <Form layout=\"inline\" onSubmit={e => handleSubmit(e)}>\n          <Form.Item\n            validateStatus={passwordError ? 'error' : ''}\n            help={passwordError || ''}\n          >\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, message: 'Please input your Password!' }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={hasErrors(getFieldsError())}\n            >\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n      </Container>\n    </>\n  )\n}\n\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(\n  HorizontalLoginForm\n)\n\nexport default WrappedHorizontalLoginForm\n"]},"metadata":{},"sourceType":"module"}