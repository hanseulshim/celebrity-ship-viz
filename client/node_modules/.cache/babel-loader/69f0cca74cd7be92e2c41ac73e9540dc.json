{"ast":null,"code":"import React,{useContext}from'react';import{useQuery}from'@apollo/client';import{store}from'context/store';// Project Components\nimport FilterSelect from'components/common/FilterSelect';import Notification from'components/common/Notification';import Loader from'components/common/Loader';// GQL\nimport{GET_SHIP_LIST}from'graphql/queries';var SelectPeerShip=function SelectPeerShip(){var globalState=useContext(store);var state=globalState.state,dispatch=globalState.dispatch;var selectedPeerShip=state.selectedPeerShip;var _useQuery=useQuery(GET_SHIP_LIST,{fetchPolicy:'network-only'}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;var onChange=function onChange(value){dispatch({type:'setSelectedPeerShip',value:value});};if(loading)return React.createElement(Loader,null);if(error)return React.createElement(Notification,{type:\"error\",message:error.message});return React.createElement(FilterSelect,{label:\"Ship(s)\",mode:\"multiple\",displayKey:\"shipName\",options:data.shipList,value:selectedPeerShip,width:300,onChange:onChange});};export default SelectPeerShip;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/filters/peer-group-filters/SelectPeerShip.js"],"names":["React","useContext","useQuery","store","FilterSelect","Notification","Loader","GET_SHIP_LIST","SelectPeerShip","globalState","state","dispatch","selectedPeerShip","fetchPolicy","loading","error","data","onChange","value","type","message","shipList"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,KAAT,KAAsB,eAAtB,CAEA;AACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA;AACA,OAASC,aAAT,KAA8B,iBAA9B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACE,KAAD,CAA9B,CAD2B,GAEnBO,CAAAA,KAFmB,CAECD,WAFD,CAEnBC,KAFmB,CAEZC,QAFY,CAECF,WAFD,CAEZE,QAFY,IAGnBC,CAAAA,gBAHmB,CAGEF,KAHF,CAGnBE,gBAHmB,eAIMV,QAAQ,CAACK,aAAD,CAAgB,CACvDM,WAAW,CAAE,cAD0C,CAAhB,CAJd,CAInBC,OAJmB,WAInBA,OAJmB,CAIVC,KAJU,WAIVA,KAJU,CAIHC,IAJG,WAIHA,IAJG,CAO3B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACxBP,QAAQ,CAAC,CAAEQ,IAAI,CAAE,qBAAR,CAA+BD,KAAK,CAALA,KAA/B,CAAD,CAAR,CACD,CAFD,CAGA,GAAIJ,OAAJ,CAAa,MAAO,qBAAC,MAAD,MAAP,CACb,GAAIC,KAAJ,CAAW,MAAO,qBAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,CAA2B,OAAO,CAAEA,KAAK,CAACK,OAA1C,EAAP,CACX,MACE,qBAAC,YAAD,EACE,KAAK,CAAC,SADR,CAEE,IAAI,CAAC,UAFP,CAGE,UAAU,CAAC,UAHb,CAIE,OAAO,CAAEJ,IAAI,CAACK,QAJhB,CAKE,KAAK,CAAET,gBALT,CAME,KAAK,CAAE,GANT,CAOE,QAAQ,CAAEK,QAPZ,EADF,CAWD,CAvBD,CAyBA,cAAeT,CAAAA,cAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { store } from 'context/store'\n\n// Project Components\nimport FilterSelect from 'components/common/FilterSelect'\nimport Notification from 'components/common/Notification'\nimport Loader from 'components/common/Loader'\n\n// GQL\nimport { GET_SHIP_LIST } from 'graphql/queries'\n\nconst SelectPeerShip = () => {\n  const globalState = useContext(store)\n  const { state, dispatch } = globalState\n  const { selectedPeerShip } = state\n  const { loading, error, data } = useQuery(GET_SHIP_LIST, {\n    fetchPolicy: 'network-only'\n  })\n  const onChange = value => {\n    dispatch({ type: 'setSelectedPeerShip', value })\n  }\n  if (loading) return <Loader />\n  if (error) return <Notification type=\"error\" message={error.message} />\n  return (\n    <FilterSelect\n      label=\"Ship(s)\"\n      mode=\"multiple\"\n      displayKey=\"shipName\"\n      options={data.shipList}\n      value={selectedPeerShip}\n      width={300}\n      onChange={onChange}\n    />\n  )\n}\n\nexport default SelectPeerShip\n"]},"metadata":{},"sourceType":"module"}