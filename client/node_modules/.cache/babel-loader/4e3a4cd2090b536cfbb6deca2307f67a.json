{"ast":null,"code":"import _slicedToArray from \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/index.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { store } from 'context/store';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport styled from 'styled-components';\nimport { GET_FIRST_SAIL_DATE, GET_VISUAL_DECK_LIST } from 'graphql/queries'; // Project Imports\n\nimport Header from './Header';\nimport Filters from './filters';\nimport SubFilters from './filters/sub-filters';\nimport ShipViz from './ship-viz';\nimport Timeline from './filters/timeline';\nimport Legend from './legend';\nimport DeckView from './legend/DeckView';\nimport Charts from './charts';\nimport { getFilterVariables } from 'helper';\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Row = styled.div`\n  display: flex;\n`;\nconst VizContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding-right: 2em;\n`;\n\nconst Main = () => {\n  const globalState = useContext(store);\n  const dispatch = globalState.dispatch;\n\n  const _useQuery = useQuery(GET_FIRST_SAIL_DATE),\n        data = _useQuery.data;\n\n  const _useLazyQuery = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({\n        type: 'setShipData',\n        value: data.deckVisualList\n      });\n    },\n    fetchPolicy: 'network-only'\n  }),\n        _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n        applyFilters = _useLazyQuery2[0];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: 'setSelectedShip',\n        value: data.firstSailDate.ship\n      });\n      dispatch({\n        type: 'setSelectedSailDate',\n        value: data.firstSailDate.sailingDate\n      });\n      applyFilters({\n        variables: getFilterVariables(data.firstSailDate.ship.id, data.firstSailDate.sailingDate.id, data.firstSailDate.interval)\n      });\n    }\n  }, [data, dispatch, applyFilters]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Filters, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Charts, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(VizContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(SubFilters, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ShipViz, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(Row, {\n    style: {\n      padding: '2em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Timeline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(DeckView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/index.js"],"names":["React","useContext","useEffect","store","useQuery","useLazyQuery","styled","GET_FIRST_SAIL_DATE","GET_VISUAL_DECK_LIST","Header","Filters","SubFilters","ShipViz","Timeline","Legend","DeckView","Charts","getFilterVariables","Container","div","Row","VizContainer","Main","globalState","dispatch","data","onCompleted","type","value","deckVisualList","fetchPolicy","applyFilters","firstSailDate","ship","sailingDate","variables","id","interval","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { store } from 'context/store'\nimport { useQuery, useLazyQuery } from '@apollo/client'\nimport styled from 'styled-components'\n\nimport { GET_FIRST_SAIL_DATE, GET_VISUAL_DECK_LIST } from 'graphql/queries'\n\n// Project Imports\nimport Header from './Header'\nimport Filters from './filters'\nimport SubFilters from './filters/sub-filters'\nimport ShipViz from './ship-viz'\nimport Timeline from './filters/timeline'\nimport Legend from './legend'\nimport DeckView from './legend/DeckView'\nimport Charts from './charts'\n\nimport { getFilterVariables } from 'helper'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst Row = styled.div`\n  display: flex;\n`\nconst VizContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding-right: 2em;\n`\n\nconst Main = () => {\n  const globalState = useContext(store)\n  const { dispatch } = globalState\n\n  const { data } = useQuery(GET_FIRST_SAIL_DATE)\n  const [applyFilters] = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({ type: 'setShipData', value: data.deckVisualList })\n    },\n    fetchPolicy: 'network-only'\n  })\n\n  useEffect(() => {\n    if (data) {\n      dispatch({ type: 'setSelectedShip', value: data.firstSailDate.ship })\n      dispatch({\n        type: 'setSelectedSailDate',\n        value: data.firstSailDate.sailingDate\n      })\n      applyFilters({\n        variables: getFilterVariables(data.firstSailDate.ship.id, data.firstSailDate.sailingDate.id, data.firstSailDate.interval)\n      })\n    }\n  }, [data, dispatch, applyFilters])\n\n  return (\n    <Container>\n      <Header />\n      <Filters />\n      <Row>\n        <Charts />\n        <VizContainer>\n          <SubFilters />\n          <Row>\n            <ShipViz />\n            <Legend />\n          </Row>\n          <Row style={{ padding: '2em 0em' }}>\n            <Timeline />\n            <DeckView />\n          </Row>\n        </VizContainer>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}