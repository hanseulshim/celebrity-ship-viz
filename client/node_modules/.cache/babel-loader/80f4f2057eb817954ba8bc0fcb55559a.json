{"ast":null,"code":"import React,{useContext}from'react';import{useQuery}from'@apollo/client';import{store}from'context/store';// Project Components\nimport FilterSelect from'components/common/FilterSelect';import Notification from'components/common/Notification';import Loader from'components/common/Loader';// GQL\nimport{GET_SAILING_DATE_LIST}from'graphql/queries';var SelectSailDate=function SelectSailDate(){var globalState=useContext(store);var state=globalState.state,dispatch=globalState.dispatch;var selectedShip=state.selectedShip,selectedProduct=state.selectedProduct,selectedItinerary=state.selectedItinerary,selectedSailDate=state.selectedSailDate;var _useQuery=useQuery(GET_SAILING_DATE_LIST,{variables:{shipId:selectedShip.id,productId:selectedProduct.id,itineraryId:selectedItinerary.id},fetchPolicy:'network-only'}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;var onChange=function onChange(value){var sailDate=data.sailingDateList.find(function(date){return date.id===value;});dispatch({type:'setSelectedSailDate',value:sailDate});};if(loading)return React.createElement(Loader,null);if(error)return React.createElement(Notification,{type:\"error\",message:error.message});return React.createElement(FilterSelect,{label:\"Sail Date\",displayKey:\"sailingDate\",options:data.sailingDateList,value:selectedSailDate.id,onChange:onChange});};export default SelectSailDate;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/filters/main-filters/SelectSailDate.js"],"names":["React","useContext","useQuery","store","FilterSelect","Notification","Loader","GET_SAILING_DATE_LIST","SelectSailDate","globalState","state","dispatch","selectedShip","selectedProduct","selectedItinerary","selectedSailDate","variables","shipId","id","productId","itineraryId","fetchPolicy","loading","error","data","onChange","value","sailDate","sailingDateList","find","date","type","message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,KAAT,KAAsB,eAAtB,CAEA;AACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA;AACA,OAASC,qBAAT,KAAsC,iBAAtC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACE,KAAD,CAA9B,CAD2B,GAEnBO,CAAAA,KAFmB,CAECD,WAFD,CAEnBC,KAFmB,CAEZC,QAFY,CAECF,WAFD,CAEZE,QAFY,IAIzBC,CAAAA,YAJyB,CAQvBF,KARuB,CAIzBE,YAJyB,CAKzBC,eALyB,CAQvBH,KARuB,CAKzBG,eALyB,CAMzBC,iBANyB,CAQvBJ,KARuB,CAMzBI,iBANyB,CAOzBC,gBAPyB,CAQvBL,KARuB,CAOzBK,gBAPyB,eAUMb,QAAQ,CAACK,qBAAD,CAAwB,CAC/DS,SAAS,CAAE,CACTC,MAAM,CAAEL,YAAY,CAACM,EADZ,CAETC,SAAS,CAAEN,eAAe,CAACK,EAFlB,CAGTE,WAAW,CAAEN,iBAAiB,CAACI,EAHtB,CADoD,CAM/DG,WAAW,CAAE,cANkD,CAAxB,CAVd,CAUnBC,OAVmB,WAUnBA,OAVmB,CAUVC,KAVU,WAUVA,KAVU,CAUHC,IAVG,WAUHA,IAVG,CAmB3B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACxB,GAAMC,CAAAA,QAAQ,CAAGH,IAAI,CAACI,eAAL,CAAqBC,IAArB,CAA0B,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACZ,EAAL,GAAYQ,KAAhB,EAA9B,CAAjB,CACAf,QAAQ,CAAC,CAAEoB,IAAI,CAAE,qBAAR,CAA+BL,KAAK,CAAEC,QAAtC,CAAD,CAAR,CACD,CAHD,CAKA,GAAIL,OAAJ,CAAa,MAAO,qBAAC,MAAD,MAAP,CACb,GAAIC,KAAJ,CAAW,MAAO,qBAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,CAA2B,OAAO,CAAEA,KAAK,CAACS,OAA1C,EAAP,CACX,MACE,qBAAC,YAAD,EACE,KAAK,CAAC,WADR,CAEE,UAAU,CAAC,aAFb,CAGE,OAAO,CAAER,IAAI,CAACI,eAHhB,CAIE,KAAK,CAAEb,gBAAgB,CAACG,EAJ1B,CAKE,QAAQ,CAAEO,QALZ,EADF,CASD,CAnCD,CAqCA,cAAejB,CAAAA,cAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { store } from 'context/store'\n\n// Project Components\nimport FilterSelect from 'components/common/FilterSelect'\nimport Notification from 'components/common/Notification'\nimport Loader from 'components/common/Loader'\n\n// GQL\nimport { GET_SAILING_DATE_LIST } from 'graphql/queries'\n\nconst SelectSailDate = () => {\n  const globalState = useContext(store)\n  const { state, dispatch } = globalState\n  const {\n    selectedShip,\n    selectedProduct,\n    selectedItinerary,\n    selectedSailDate\n  } = state\n\n  const { loading, error, data } = useQuery(GET_SAILING_DATE_LIST, {\n    variables: {\n      shipId: selectedShip.id,\n      productId: selectedProduct.id,\n      itineraryId: selectedItinerary.id\n    },\n    fetchPolicy: 'network-only'\n  })\n\n  const onChange = value => {\n    const sailDate = data.sailingDateList.find(date => date.id === value)\n    dispatch({ type: 'setSelectedSailDate', value: sailDate })\n  }\n\n  if (loading) return <Loader />\n  if (error) return <Notification type=\"error\" message={error.message} />\n  return (\n    <FilterSelect\n      label=\"Sail Date\"\n      displayKey=\"sailingDate\"\n      options={data.sailingDateList}\n      value={selectedSailDate.id}\n      onChange={onChange}\n    />\n  )\n}\n\nexport default SelectSailDate\n"]},"metadata":{},"sourceType":"module"}