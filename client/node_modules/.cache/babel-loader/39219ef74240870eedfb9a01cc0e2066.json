{"ast":null,"code":"import _objectSpread from \"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/src/context/store.js\";\n// store.js\nimport React, { createContext, useReducer } from 'react'; // initial state\n\nimport initialState from './initialState';\nconst store = createContext(initialState);\nconst Provider = store.Provider;\n\nconst StateProvider = ({\n  children\n}) => {\n  const _useReducer = useReducer((state, action) => {\n    switch (action.type) {\n      case 'togglePeerGroupFilters':\n        return _objectSpread({}, state, {\n          peerGroupFilters: !state.peerGroupFilters\n        });\n\n      case 'setSelectedShip':\n        return _objectSpread({}, state, {\n          selectedShip: action.value,\n          selectedProduct: initialState.selectedProduct,\n          selectedItinerary: initialState.selectedItinerary,\n          selectedSailDate: initialState.selectedSailDate\n        });\n\n      case 'setSelectedProduct':\n        return _objectSpread({}, state, {\n          selectedProduct: action.value,\n          selectedItinerary: initialState.selectedItinerary,\n          selectedSailDate: initialState.selectedSailDate\n        });\n\n      case 'setSelectedItinerary':\n        return _objectSpread({}, state, {\n          selectedItinerary: action.value,\n          selectedSailDate: initialState.selectedSailDate\n        });\n\n      case 'setSelectedSailDate':\n        return _objectSpread({}, state, {\n          selectedSailDate: action.value\n        });\n\n      case 'setSelectedPeerShip':\n        return _objectSpread({}, state, {\n          selectedPeerShip: action.value\n        });\n\n      case 'setSelectedPeerProduct':\n        return _objectSpread({}, state, {\n          selectedPeerProduct: action.value\n        });\n\n      case 'setSelectedPeerSailingDates':\n        return _objectSpread({}, state, {\n          selectedPeerSailingDates: action.value\n        });\n\n      case 'setSelectedSubFilter':\n        return _objectSpread({}, state, {\n          filter: _objectSpread({}, state.filter, {\n            [action.title]: action.value\n          })\n        });\n\n      case 'setSelectedPeerSubFilter':\n        return _objectSpread({}, state, {\n          peerFilter: _objectSpread({}, state.peerFilter, {\n            [action.title]: action.value\n          })\n        });\n\n      case 'setSelectedSubFilterCount':\n        return _objectSpread({}, state, {\n          filterCount: _objectSpread({}, state.filterCount, {\n            [action.title]: action.value\n          })\n        });\n\n      case 'setSelectedBookingWeek':\n        return _objectSpread({}, state, {\n          selectedBookingWeek: action.value\n        });\n\n      case 'setSelectedDeck':\n        return _objectSpread({}, state, {\n          selectedDeck: action.value\n        });\n\n      case 'setShipData':\n        return _objectSpread({}, state, {\n          shipData: action.value\n        });\n\n      default:\n        throw new Error();\n    }\n  }, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, children);\n};\n\nexport { store, StateProvider };","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/context/store.js"],"names":["React","createContext","useReducer","initialState","store","Provider","StateProvider","children","state","action","type","peerGroupFilters","selectedShip","value","selectedProduct","selectedItinerary","selectedSailDate","selectedPeerShip","selectedPeerProduct","selectedPeerSailingDates","filter","title","peerFilter","filterCount","selectedBookingWeek","selectedDeck","shipData","Error","dispatch"],"mappings":"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","sourcesContent":["// store.js\nimport React, { createContext, useReducer } from 'react'\n\n// initial state\nimport initialState from './initialState'\n\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'togglePeerGroupFilters':\n        return {\n          ...state,\n          peerGroupFilters: !state.peerGroupFilters\n        }\n      case 'setSelectedShip':\n        return {\n          ...state,\n          selectedShip: action.value,\n          selectedProduct: initialState.selectedProduct,\n          selectedItinerary: initialState.selectedItinerary,\n          selectedSailDate: initialState.selectedSailDate\n        }\n      case 'setSelectedProduct':\n        return {\n          ...state,\n          selectedProduct: action.value,\n          selectedItinerary: initialState.selectedItinerary,\n          selectedSailDate: initialState.selectedSailDate\n        }\n      case 'setSelectedItinerary':\n        return {\n          ...state,\n          selectedItinerary: action.value,\n          selectedSailDate: initialState.selectedSailDate\n        }\n      case 'setSelectedSailDate':\n        return {\n          ...state,\n          selectedSailDate: action.value\n        }\n      case 'setSelectedPeerShip':\n        return {\n          ...state,\n          selectedPeerShip: action.value\n        }\n      case 'setSelectedPeerProduct':\n        return {\n          ...state,\n          selectedPeerProduct: action.value\n        }\n      case 'setSelectedPeerSailingDates':\n        return {\n          ...state,\n          selectedPeerSailingDates: action.value\n        }\n      case 'setSelectedSubFilter':\n        return {\n          ...state,\n          filter: {\n            ...state.filter,\n            [action.title]: action.value\n          }\n        }\n      case 'setSelectedPeerSubFilter':\n        return {\n          ...state,\n          peerFilter: {\n            ...state.peerFilter,\n            [action.title]: action.value\n          }\n        }\n      case 'setSelectedSubFilterCount':\n        return {\n          ...state,\n          filterCount: {\n            ...state.filterCount,\n            [action.title]: action.value\n          }\n        }\n      case 'setSelectedBookingWeek':\n        return {\n          ...state,\n          selectedBookingWeek: action.value\n        }\n      case 'setSelectedDeck':\n        return {\n          ...state,\n          selectedDeck: action.value\n        }\n      case 'setShipData':\n        return {\n          ...state,\n          shipData: action.value\n        }\n      default:\n        throw new Error()\n    }\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>\n}\n\nexport { store, StateProvider }\n"]},"metadata":{},"sourceType":"module"}