{"ast":null,"code":"import _toConsumableArray from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: \",\";\\n  margin: 1em 0em;\\n  cursor: pointer;\\n\\n  span {\\n    border-bottom: \",\";\\n  }\\n\\n  img {\\n    width: 200px;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  min-height: 500px;\\n  flex-direction: column;\\n  flex-flow: column-reverse;\\n  padding: 1em 1em;\\n  border: 2px solid \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext,useState}from'react';import{store}from'context/store';import styled from'styled-components';import{DECK_SLICE_SVG_URL}from'./config';import{GET_DECK_LIST}from'graphql/queries';import Loader from'components/common/Loader';import Notification from'components/common/Notification';import{useQuery}from'@apollo/client';import numeral from'numeral';var Container=styled.div(_templateObject(),function(props){return props.theme.biscay;});var Deck=styled.div(_templateObject2(),function(props){return props.theme.jungleMist;},function(props){return props.selected?\"1px solid \".concat(props.theme.jungleMist):'';});var DeckSvg=function DeckSvg(_ref){var deck=_ref.deck;var globalState=useContext(store);var state=globalState.state;var selectedDeck=state.selectedDeck,selectedShip=state.selectedShip;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hover=_useState2[0],setHover=_useState2[1];var getSrc=function getSrc(){return hover||selectedDeck===deck?DECK_SLICE_SVG_URL.replace('{SHIP_CLASS}',selectedShip.classId).replace('{DECK}',\"\".concat(deck,\"_ro\")):DECK_SLICE_SVG_URL.replace('{SHIP_CLASS}',selectedShip.classId).replace('{DECK}',deck);};return React.createElement(\"img\",{src:getSrc(),onMouseOver:function onMouseOver(){return setHover(true);},onMouseOut:function onMouseOut(){return setHover(false);},alt:\"deck\"});};var SelectDeck=function SelectDeck(){var globalState=useContext(store);var state=globalState.state,dispatch=globalState.dispatch;var selectedDeck=state.selectedDeck,selectedShip=state.selectedShip;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),deckList=_useState4[0],setDeckList=_useState4[1];var _useQuery=useQuery(GET_DECK_LIST,{variables:{shipId:selectedShip.id},onCompleted:function onCompleted(_ref2){var deckList=_ref2.deckList;dispatch({type:'setSelectedDeck',value:Math.min.apply(Math,_toConsumableArray(deckList))});setDeckList(deckList);}}),loading=_useQuery.loading,error=_useQuery.error;var handleSelect=function handleSelect(value){dispatch({type:'setSelectedDeck',value:value});};if(loading){return React.createElement(Container,null,React.createElement(Loader,null));}if(error){return React.createElement(Container,null,React.createElement(Notification,{type:\"error\",message:error.message}));}return React.createElement(Container,null,deckList.map(function(deck,i){return React.createElement(Deck,{key:'deck'+i,onClick:function onClick(){return handleSelect(deck);},selected:selectedDeck===deck},React.createElement(\"span\",null,\"D\",numeral(deck).format('00')),React.createElement(DeckSvg,{deck:deck}));}));};export default SelectDeck;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/legend/SelectDeck.js"],"names":["React","useContext","useState","store","styled","DECK_SLICE_SVG_URL","GET_DECK_LIST","Loader","Notification","useQuery","numeral","Container","div","props","theme","biscay","Deck","jungleMist","selected","DeckSvg","deck","globalState","state","selectedDeck","selectedShip","hover","setHover","getSrc","replace","classId","SelectDeck","dispatch","deckList","setDeckList","variables","shipId","id","onCompleted","type","value","Math","min","loading","error","handleSelect","message","map","i","format"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { store } from 'context/store'\nimport styled from 'styled-components'\nimport { DECK_SLICE_SVG_URL } from './config'\nimport { GET_DECK_LIST } from 'graphql/queries'\nimport Loader from 'components/common/Loader'\nimport Notification from 'components/common/Notification'\nimport { useQuery } from '@apollo/client'\nimport numeral from 'numeral'\n\nconst Container = styled.div`\n  display: flex;\n  min-height: 500px;\n  flex-direction: column;\n  flex-flow: column-reverse;\n  padding: 1em 1em;\n  border: 2px solid ${props => props.theme.biscay};\n`\nconst Deck = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${props => props.theme.jungleMist};\n  margin: 1em 0em;\n  cursor: pointer;\n\n  span {\n    border-bottom: ${props =>\n      props.selected ? `1px solid ${props.theme.jungleMist}` : ''};\n  }\n\n  img {\n    width: 200px;\n  }\n`\n\nconst DeckSvg = ({ deck }) => {\n  const globalState = useContext(store)\n  const { state } = globalState\n  const { selectedDeck, selectedShip } = state\n  const [hover, setHover] = useState(false)\n  const getSrc = () =>\n    hover || selectedDeck === deck\n      ? DECK_SLICE_SVG_URL.replace(\n          '{SHIP_CLASS}',\n          selectedShip.classId\n        ).replace('{DECK}', `${deck}_ro`)\n      : DECK_SLICE_SVG_URL.replace(\n          '{SHIP_CLASS}',\n          selectedShip.classId\n        ).replace('{DECK}', deck)\n  return (\n    <img\n      src={getSrc()}\n      onMouseOver={() => setHover(true)}\n      onMouseOut={() => setHover(false)}\n      alt=\"deck\"\n    />\n  )\n}\n\nconst SelectDeck = () => {\n  const globalState = useContext(store)\n  const { state, dispatch } = globalState\n  const { selectedDeck, selectedShip } = state\n  const [deckList, setDeckList] = useState([])\n  const { loading, error } = useQuery(GET_DECK_LIST, {\n    variables: { shipId: selectedShip.id },\n    onCompleted({ deckList }) {\n      dispatch({ type: 'setSelectedDeck', value: Math.min(...deckList) })\n      setDeckList(deckList)\n    }\n  })\n\n  const handleSelect = value => {\n    dispatch({ type: 'setSelectedDeck', value })\n  }\n\n  if (loading) {\n    return (\n      <Container>\n        <Loader />\n      </Container>\n    )\n  }\n  if (error) {\n    return (\n      <Container>\n        <Notification type=\"error\" message={error.message} />\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      {deckList.map((deck, i) => {\n        return (\n          <Deck\n            key={'deck' + i}\n            onClick={() => handleSelect(deck)}\n            selected={selectedDeck === deck}\n          >\n            <span>D{numeral(deck).format('00')}</span>\n            <DeckSvg deck={deck} />\n          </Deck>\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default SelectDeck\n"]},"metadata":{},"sourceType":"module"}