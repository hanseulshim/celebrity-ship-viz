{"ast":null,"code":"import _slicedToArray from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  cursor: \",\";\\n  background-color: \",\";\\n  color: \",\";\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  background-color: rgb(0, 0, 0, 0);\\n  color: \",\";\\n  padding: 1em 0em;\\n  > div {\\n    margin-right: 2em;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext}from'react';import{useLazyQuery}from'@apollo/client';import{store}from'context/store';import styled from'styled-components';// Project Imports\nimport SelectProduct from'./SelectProduct';import SelectItinerary from'./SelectItinerary';import SelectShip from'./SelectShip';import PeerGroupToggle from'./PeerGroupToggle';import SelectSailDate from'./SelectSailDate';import Button from'components/common/Button';import CsvDownload from'./CsvDownload';import{getFilterVariables}from'helper';// Graphql\nimport{GET_VISUAL_DECK_LIST}from'graphql/queries';var Container=styled.div(_templateObject(),function(props){return props.theme.jungleMist;});var Apply=styled(Button)(_templateObject2(),function(props){return props.disabled?'not-allowed':'pointer';},function(props){return props.theme.lochmara;},function(props){return props.theme.white;});var MainFilters=function MainFilters(){var globalState=useContext(store);var state=globalState.state,dispatch=globalState.dispatch;var selectedShip=state.selectedShip,selectedProduct=state.selectedProduct,selectedItinerary=state.selectedItinerary,selectedSailDate=state.selectedSailDate,selectedBookingWeek=state.selectedBookingWeek,peerGroupFilters=state.peerGroupFilters,selectedPeerShip=state.selectedPeerShip,selectedPeerProduct=state.selectedPeerProduct,selectedPeerSailingDates=state.selectedPeerSailingDates,filter=state.filter,peerFilter=state.peerFilter,filterCount=state.filterCount;var _useLazyQuery=useLazyQuery(GET_VISUAL_DECK_LIST,{onCompleted:function onCompleted(data){dispatch({type:'setShipData',value:data.deckVisualList});},fetchPolicy:'network-only'}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),applyFilters=_useLazyQuery2[0];var enableApply=function enableApply(){return selectedShip&&selectedProduct&&selectedItinerary&&selectedSailDate;};return React.createElement(Container,null,React.createElement(PeerGroupToggle,null),React.createElement(SelectShip,null),React.createElement(SelectProduct,null),React.createElement(SelectItinerary,null),React.createElement(SelectSailDate,null),React.createElement(Apply,{primary:true,disabled:!enableApply(),onClick:function onClick(){return applyFilters({variables:getFilterVariables(selectedShip.id,selectedSailDate.id,selectedBookingWeek,selectedProduct.id,selectedItinerary.id,peerGroupFilters,selectedPeerShip,selectedPeerProduct.id,selectedPeerSailingDates[0],selectedPeerSailingDates[1],filter,peerFilter,filterCount)});}},\"Apply\"),React.createElement(CsvDownload,null));};export default MainFilters;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/filters/main-filters/index.js"],"names":["React","useContext","useLazyQuery","store","styled","SelectProduct","SelectItinerary","SelectShip","PeerGroupToggle","SelectSailDate","Button","CsvDownload","getFilterVariables","GET_VISUAL_DECK_LIST","Container","div","props","theme","jungleMist","Apply","disabled","lochmara","white","MainFilters","globalState","state","dispatch","selectedShip","selectedProduct","selectedItinerary","selectedSailDate","selectedBookingWeek","peerGroupFilters","selectedPeerShip","selectedPeerProduct","selectedPeerSailingDates","filter","peerFilter","filterCount","onCompleted","data","type","value","deckVisualList","fetchPolicy","applyFilters","enableApply","variables","id"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useLazyQuery } from '@apollo/client'\nimport { store } from 'context/store'\nimport styled from 'styled-components'\n\n// Project Imports\nimport SelectProduct from './SelectProduct'\nimport SelectItinerary from './SelectItinerary'\nimport SelectShip from './SelectShip'\nimport PeerGroupToggle from './PeerGroupToggle'\nimport SelectSailDate from './SelectSailDate'\nimport Button from 'components/common/Button'\nimport CsvDownload from './CsvDownload'\nimport { getFilterVariables } from 'helper'\n\n// Graphql\nimport { GET_VISUAL_DECK_LIST } from 'graphql/queries'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: rgb(0, 0, 0, 0);\n  color: ${props => props.theme.jungleMist};\n  padding: 1em 0em;\n  > div {\n    margin-right: 2em;\n  }\n`\n\nconst Apply = styled(Button)`\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  background-color: ${props => props.theme.lochmara};\n  color: ${props => props.theme.white};\n`\n\nconst MainFilters = () => {\n  const globalState = useContext(store)\n  const { state, dispatch } = globalState\n  const {\n    selectedShip,\n    selectedProduct,\n    selectedItinerary,\n    selectedSailDate,\n    selectedBookingWeek,\n    peerGroupFilters,\n    selectedPeerShip,\n    selectedPeerProduct,\n    selectedPeerSailingDates,\n    filter,\n    peerFilter,\n    filterCount\n  } = state\n  const [applyFilters] = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({ type: 'setShipData', value: data.deckVisualList })\n    },\n    fetchPolicy: 'network-only'\n  })\n\n  const enableApply = () =>\n    selectedShip && selectedProduct && selectedItinerary && selectedSailDate\n\n  return (\n    <Container>\n      <PeerGroupToggle />\n      <SelectShip />\n      <SelectProduct />\n      <SelectItinerary />\n      <SelectSailDate />\n      <Apply\n        primary\n        disabled={!enableApply()}\n        onClick={() =>\n          applyFilters({\n            variables: getFilterVariables(\n              selectedShip.id,\n              selectedSailDate.id,\n              selectedBookingWeek,\n              selectedProduct.id,\n              selectedItinerary.id,\n              peerGroupFilters,\n              selectedPeerShip,\n              selectedPeerProduct.id,\n              selectedPeerSailingDates[0],\n              selectedPeerSailingDates[1],\n              filter,\n              peerFilter,\n              filterCount\n            )\n          })\n        }\n      >\n        Apply\n      </Apply>\n      <CsvDownload />\n    </Container>\n  )\n}\n\nexport default MainFilters\n"]},"metadata":{},"sourceType":"module"}