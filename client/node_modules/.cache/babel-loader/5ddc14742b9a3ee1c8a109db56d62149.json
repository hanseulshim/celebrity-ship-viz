{"ast":null,"code":"import _slicedToArray from \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/charts/CategoryClass.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { store } from 'context/store';\nimport { useQuery } from '@apollo/client';\nimport { GET_CABIN_CATEGORY_CLASS_CHART } from 'graphql/queries';\nimport { categoryClassLayout } from './config';\nimport { createCategoryClass } from './helper';\nimport Loader from 'components/common/Loader';\nimport Notification from 'components/common/Notification';\nimport Plot from 'react-plotly.js';\nimport categoryClassBlurry from 'assets/categoryClassBlurry.png';\nconst Blurry = styled.img`\n\twidth: 400px;\n`;\n\nconst CategoryClass = () => {\n  const globalState = useContext(store);\n  const state = globalState.state;\n  const selectedShip = state.selectedShip,\n        selectedSailDate = state.selectedSailDate,\n        selectedBookingWeek = state.selectedBookingWeek;\n\n  const _useQuery = useQuery(GET_CABIN_CATEGORY_CLASS_CHART, {\n    variables: {\n      shipId: selectedShip.id,\n      sailingDate: selectedSailDate.sailingDate,\n      interval: selectedBookingWeek\n    },\n    skip: !selectedShip.id || !selectedSailDate.sailingDate || selectedBookingWeek === null,\n    fetchPolicy: 'network-only'\n  }),\n        networkStatus = _useQuery.networkStatus,\n        error = _useQuery.error,\n        data = _useQuery.data; // local state for plot data\n\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        plotData = _useState2[0],\n        setPlotdata = _useState2[1];\n\n  useEffect(() => {\n    if (data) {\n      const bars = Object.keys(data.cabinCategoryClassChart);\n      const barData = bars.filter(v => v !== '__typename' && v !== 'y').map(bar => createCategoryClass(data.cabinCategoryClassChart[bar], bar, data.cabinCategoryClassChart.y));\n      setPlotdata(barData);\n    }\n  }, [selectedShip, selectedSailDate, selectedBookingWeek, data]);\n\n  if (!selectedShip.id || !selectedSailDate.sailingDate || selectedBookingWeek === null) {\n    return React.createElement(Blurry, {\n      src: categoryClassBlurry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n  if (networkStatus !== 2 && networkStatus !== 7) return React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  });\n  if (error) return React.createElement(Notification, {\n    type: \"error\",\n    message: error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Plot, {\n    data: plotData,\n    layout: categoryClassLayout,\n    config: {\n      displayModeBar: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n};\n\nexport default CategoryClass;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/charts/CategoryClass.js"],"names":["React","useState","useContext","useEffect","styled","store","useQuery","GET_CABIN_CATEGORY_CLASS_CHART","categoryClassLayout","createCategoryClass","Loader","Notification","Plot","categoryClassBlurry","Blurry","img","CategoryClass","globalState","state","selectedShip","selectedSailDate","selectedBookingWeek","variables","shipId","id","sailingDate","interval","skip","fetchPolicy","networkStatus","error","data","plotData","setPlotdata","bars","Object","keys","cabinCategoryClassChart","barData","filter","v","map","bar","y","message","displayModeBar"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { store } from 'context/store'\nimport { useQuery } from '@apollo/client'\nimport { GET_CABIN_CATEGORY_CLASS_CHART } from 'graphql/queries'\nimport { categoryClassLayout } from './config'\nimport { createCategoryClass } from './helper'\nimport Loader from 'components/common/Loader'\nimport Notification from 'components/common/Notification'\nimport Plot from 'react-plotly.js'\nimport categoryClassBlurry from 'assets/categoryClassBlurry.png'\n\nconst Blurry = styled.img`\n\twidth: 400px;\n`\n\nconst CategoryClass = () => {\n\tconst globalState = useContext(store)\n\tconst { state } = globalState\n\tconst { selectedShip, selectedSailDate, selectedBookingWeek } = state\n\n\tconst { networkStatus, error, data } = useQuery(\n\t\tGET_CABIN_CATEGORY_CLASS_CHART,\n\t\t{\n\t\t\tvariables: {\n\t\t\t\tshipId: selectedShip.id,\n\t\t\t\tsailingDate: selectedSailDate.sailingDate,\n\t\t\t\tinterval: selectedBookingWeek\n\t\t\t},\n\t\t\tskip:\n\t\t\t\t!selectedShip.id ||\n\t\t\t\t!selectedSailDate.sailingDate ||\n\t\t\t\tselectedBookingWeek === null,\n\t\t\tfetchPolicy: 'network-only'\n\t\t}\n\t)\n\n\t// local state for plot data\n\tconst [plotData, setPlotdata] = useState([])\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tconst bars = Object.keys(data.cabinCategoryClassChart)\n\t\t\tconst barData = bars\n\t\t\t\t.filter((v) => v !== '__typename' && v !== 'y')\n\t\t\t\t.map((bar) =>\n\t\t\t\t\tcreateCategoryClass(\n\t\t\t\t\t\tdata.cabinCategoryClassChart[bar],\n\t\t\t\t\t\tbar,\n\t\t\t\t\t\tdata.cabinCategoryClassChart.y\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\tsetPlotdata(barData)\n\t\t}\n\t}, [selectedShip, selectedSailDate, selectedBookingWeek, data])\n\n\tif (\n\t\t!selectedShip.id ||\n\t\t!selectedSailDate.sailingDate ||\n\t\tselectedBookingWeek === null\n\t) {\n\t\treturn <Blurry src={categoryClassBlurry} />\n\t}\n\tif (networkStatus !== 2 && networkStatus !== 7) return <Loader />\n\tif (error) return <Notification type=\"error\" message={error.message} />\n\treturn (\n\t\t<>\n\t\t\t<Plot\n\t\t\t\tdata={plotData}\n\t\t\t\tlayout={categoryClassLayout}\n\t\t\t\tconfig={{ displayModeBar: false }}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default CategoryClass\n"]},"metadata":{},"sourceType":"module"}