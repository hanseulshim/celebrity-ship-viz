{"ast":null,"code":"import _objectSpread from \"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport colors from 'styles/colors';\nimport { hoverInfo } from './config';\n\nconst getStatus = (point, colorCount, peerGroupFilters) => {\n  const statusObj = {};\n  const even = point.cabinNumber % 2 === 0;\n\n  if (!peerGroupFilters) {\n    statusObj.status = point.bookingStatus === 'B' ? 'BOOKED' : point.bookingStatus === 'U' ? 'UNBOOKED' : 'CANCELLED';\n    statusObj.bookedOccupancy = point.bookedOccupancy ? point.bookedOccupancy : 'N/A';\n    statusObj.cabinCapacity = point.cabinCapacity ? point.cabinCapacity : 'N/A';\n\n    if (point.bookingStatus === null) {\n      if (even) {\n        statusObj.color = colorCount.lastInvalidEven ? colors.shuttleGray : colors.fiord;\n        colorCount.lastInvalidEven = !colorCount.lastInvalidEven;\n      } else {\n        statusObj.color = colorCount.lastInvalidOdd ? colors.shuttleGray : colors.fiord;\n        colorCount.lastInvalidOdd = !colorCount.lastInvalidOdd;\n      }\n    } else if (point.bookingStatus === 'U' || point.bookingStatus === 'C') {\n      if (even) {\n        statusObj.color = colorCount.lastUnbookedEven ? colors.cabaret : colors.mandy;\n        colorCount.lastUnbookedEven = !colorCount.lastUnbookedEven;\n      } else {\n        statusObj.color = colorCount.lastUnbookedOdd ? colors.cabaret : colors.mandy;\n        colorCount.lastUnbookedOdd = !colorCount.lastUnbookedOdd;\n      }\n    } else if (point.bookedOccupancy < point.cabinCapacity) {\n      if (even) {\n        statusObj.color = colorCount.lastPartEven ? colors.keyLimePie : colors.hokeyPokey;\n        colorCount.lastPartEven = !colorCount.lastPartEven;\n      } else {\n        statusObj.color = colorCount.lastPartOdd ? colors.keyLimePie : colors.hokeyPokey;\n        colorCount.lastPartOdd = !colorCount.lastPartOdd;\n      }\n    } else {\n      if (even) {\n        statusObj.color = colorCount.lastFullEven ? colors.silverTree : colors.aquaForest;\n        colorCount.lastFullEven = !colorCount.lastFullEven;\n      } else {\n        statusObj.color = colorCount.lastFullOdd ? colors.silverTree : colors.aquaForest;\n        colorCount.lastFullOdd = !colorCount.lastFullOdd;\n      }\n    }\n  } else {\n    statusObj.category = point.category ? point.category : 'N/A';\n    statusObj.selectedPercent = point.selectedPercent ? point.selectedPercent : 'N/A';\n    statusObj.peerGroupPercent = point.peerGroupPercent ? point.peerGroupPercent : 'N/A';\n    statusObj.difference = point.difference ? point.difference : 'N/A';\n    const colorArray = ['#D4F5E9', '#BAEEED', '#92E1F2', '#83DDF4', '#66D5F8', '#4ACCFB', '#35C6F2', '#4FC8DE', '#68CAC1', '#7FCCA6', '#98CE88', '#B2D06B', '#C9D250', '#E3D533', '#E1C43F', '#DEB14A', '#DC9F58', '#D98D64', '#D67B70', '#D4697C'].reverse();\n    const difference = parseInt(point.difference) >= 20 ? 20 : parseInt(point.difference) <= -20 ? -20 : parseInt(point.difference);\n    const offset = 20;\n    const tick = offset * 2 / colorArray.length;\n    const num = Math.round((difference + offset) / tick) - 1;\n    const index = num === -1 ? 0 : num;\n    statusObj.color = isNaN(index) ? colors.shuttleGray : colorArray[index];\n  }\n\n  return statusObj;\n};\n\nconst getPolygonCoordinates = (point, length, customdata, colorCount, peerGroupFilters) => {\n  const _getStatus = getStatus(point, colorCount, peerGroupFilters),\n        color = _getStatus.color,\n        status = _getStatus.status,\n        bookedOccupancy = _getStatus.bookedOccupancy,\n        cabinCapacity = _getStatus.cabinCapacity,\n        category = _getStatus.category,\n        selectedPercent = _getStatus.selectedPercent,\n        peerGroupPercent = _getStatus.peerGroupPercent,\n        difference = _getStatus.difference;\n\n  const h0 = point.plotY0 * length; // Starting Height\n\n  const h1 = point.plotY1 * length; // Ending Height\n  // Vertices of the polygon\n\n  const v0 = point.plotX0 + h0;\n  const v1 = point.plotX1 + h0;\n  const v2 = point.plotX0 + h1;\n  const v3 = point.plotX1 + h1; // Set hover info\n\n  customdata[v0] = {\n    cabinNumber: point.cabinNumber,\n    status,\n    bookedOccupancy,\n    cabinCapacity,\n    category,\n    selectedPercent,\n    peerGroupPercent,\n    difference\n  };\n  customdata[v1] = customdata[v0];\n  return {\n    i: [v0, v1],\n    j: [v1, v2],\n    k: [v2, v3],\n    facecolor: [color, color]\n  };\n};\n\nexport const createDeck = (data, deck, selectedDeck, peerGroupFilters) => {\n  const x = [];\n  const y = [];\n  const z = [];\n  const customdata = [];\n  const length = 150;\n\n  for (let y0 = 0; y0 < length; y0++) {\n    for (let x0 = 0; x0 < length; x0++) {\n      x.push(x0);\n      y.push(y0);\n      customdata.push({\n        cabinNumber: '',\n        status: '',\n        bookedOccupancy: '',\n        cabinCapacity: '',\n        category: '',\n        selectedPercent: '',\n        peerGroupPercent: '',\n        difference: ''\n      });\n      z.push(deck);\n    }\n  }\n\n  const i = [];\n  const j = [];\n  const k = [];\n  const facecolor = [];\n  const colorCount = {\n    lastFullEven: true,\n    lastFullOdd: true,\n    lastPartEven: true,\n    lastPartOdd: true,\n    lastUnbookedEven: true,\n    lastUnbookedOdd: true,\n    lastInvalidEven: true,\n    lastInvalidOdd: true\n  };\n  data.forEach(point => {\n    const coords = getPolygonCoordinates(point, length, customdata, colorCount, peerGroupFilters);\n    i.push(...coords.i);\n    j.push(...coords.j);\n    k.push(...coords.k);\n    facecolor.push(...coords.facecolor);\n  });\n  const hover = deck === selectedDeck ? hoverInfo(peerGroupFilters) : {\n    hoverinfo: 'none'\n  };\n  const opacity = deck === selectedDeck ? 1 : 0.3;\n  return _objectSpread({\n    x,\n    y,\n    z,\n    i,\n    j,\n    k,\n    opacity,\n    facecolor,\n    customdata\n  }, hover, {\n    flatshading: true,\n    type: 'mesh3d'\n  });\n};","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/ship-viz/helper.js"],"names":["colors","hoverInfo","getStatus","point","colorCount","peerGroupFilters","statusObj","even","cabinNumber","status","bookingStatus","bookedOccupancy","cabinCapacity","color","lastInvalidEven","shuttleGray","fiord","lastInvalidOdd","lastUnbookedEven","cabaret","mandy","lastUnbookedOdd","lastPartEven","keyLimePie","hokeyPokey","lastPartOdd","lastFullEven","silverTree","aquaForest","lastFullOdd","category","selectedPercent","peerGroupPercent","difference","colorArray","reverse","parseInt","offset","tick","length","num","Math","round","index","isNaN","getPolygonCoordinates","customdata","h0","plotY0","h1","plotY1","v0","plotX0","v1","plotX1","v2","v3","i","j","k","facecolor","createDeck","data","deck","selectedDeck","x","y","z","y0","x0","push","forEach","coords","hover","hoverinfo","opacity","flatshading","type"],"mappings":"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","sourcesContent":["import colors from 'styles/colors'\nimport { hoverInfo } from './config'\n\nconst getStatus = (point, colorCount, peerGroupFilters) => {\n  const statusObj = {}\n  const even = point.cabinNumber % 2 === 0\n\n  if (!peerGroupFilters) {\n    statusObj.status =\n      point.bookingStatus === 'B'\n        ? 'BOOKED'\n        : point.bookingStatus === 'U'\n          ? 'UNBOOKED'\n          : 'CANCELLED'\n    statusObj.bookedOccupancy = point.bookedOccupancy\n      ? point.bookedOccupancy\n      : 'N/A'\n    statusObj.cabinCapacity = point.cabinCapacity ? point.cabinCapacity : 'N/A'\n    if (point.bookingStatus === null) {\n      if (even) {\n        statusObj.color = colorCount.lastInvalidEven\n          ? colors.shuttleGray\n          : colors.fiord\n        colorCount.lastInvalidEven = !colorCount.lastInvalidEven\n      } else {\n        statusObj.color = colorCount.lastInvalidOdd\n          ? colors.shuttleGray\n          : colors.fiord\n        colorCount.lastInvalidOdd = !colorCount.lastInvalidOdd\n      }\n    } else if (point.bookingStatus === 'U' || point.bookingStatus === 'C') {\n      if (even) {\n        statusObj.color = colorCount.lastUnbookedEven\n          ? colors.cabaret\n          : colors.mandy\n        colorCount.lastUnbookedEven = !colorCount.lastUnbookedEven\n      } else {\n        statusObj.color = colorCount.lastUnbookedOdd\n          ? colors.cabaret\n          : colors.mandy\n        colorCount.lastUnbookedOdd = !colorCount.lastUnbookedOdd\n      }\n    } else if (point.bookedOccupancy < point.cabinCapacity) {\n      if (even) {\n        statusObj.color = colorCount.lastPartEven\n          ? colors.keyLimePie\n          : colors.hokeyPokey\n        colorCount.lastPartEven = !colorCount.lastPartEven\n      } else {\n        statusObj.color = colorCount.lastPartOdd\n          ? colors.keyLimePie\n          : colors.hokeyPokey\n        colorCount.lastPartOdd = !colorCount.lastPartOdd\n      }\n    } else {\n      if (even) {\n        statusObj.color = colorCount.lastFullEven\n          ? colors.silverTree\n          : colors.aquaForest\n        colorCount.lastFullEven = !colorCount.lastFullEven\n      } else {\n        statusObj.color = colorCount.lastFullOdd\n          ? colors.silverTree\n          : colors.aquaForest\n        colorCount.lastFullOdd = !colorCount.lastFullOdd\n      }\n    }\n  } else {\n    statusObj.category = point.category ? point.category : 'N/A'\n    statusObj.selectedPercent = point.selectedPercent ? point.selectedPercent : 'N/A'\n    statusObj.peerGroupPercent = point.peerGroupPercent ? point.peerGroupPercent : 'N/A'\n    statusObj.difference = point.difference ? point.difference : 'N/A'\n\n    const colorArray = ['#D4F5E9',\n      '#BAEEED',\n      '#92E1F2',\n      '#83DDF4',\n      '#66D5F8',\n      '#4ACCFB',\n      '#35C6F2',\n      '#4FC8DE',\n      '#68CAC1',\n      '#7FCCA6',\n      '#98CE88',\n      '#B2D06B',\n      '#C9D250',\n      '#E3D533',\n      '#E1C43F',\n      '#DEB14A',\n      '#DC9F58',\n      '#D98D64',\n      '#D67B70',\n      '#D4697C'].reverse()\n\n    const difference = parseInt(point.difference) >= 20 ? 20 : parseInt(point.difference) <= -20 ? -20 : parseInt(point.difference)\n    const offset = 20\n    const tick = offset * 2 / colorArray.length\n    const num = Math.round((difference + offset) / tick) - 1\n    const index = num === -1 ? 0 : num\n    statusObj.color = isNaN(index) ? colors.shuttleGray : colorArray[index]\n  }\n\n  return statusObj\n}\n\nconst getPolygonCoordinates = (\n  point,\n  length,\n  customdata,\n  colorCount,\n  peerGroupFilters\n) => {\n  const {\n    color,\n    status,\n    bookedOccupancy,\n    cabinCapacity,\n    category,\n    selectedPercent,\n    peerGroupPercent,\n    difference\n  } = getStatus(point, colorCount, peerGroupFilters)\n\n  const h0 = point.plotY0 * length // Starting Height\n  const h1 = point.plotY1 * length // Ending Height\n  // Vertices of the polygon\n  const v0 = point.plotX0 + h0\n  const v1 = point.plotX1 + h0\n  const v2 = point.plotX0 + h1\n  const v3 = point.plotX1 + h1\n\n  // Set hover info\n  customdata[v0] = {\n    cabinNumber: point.cabinNumber,\n    status,\n    bookedOccupancy,\n    cabinCapacity,\n    category,\n    selectedPercent,\n    peerGroupPercent,\n    difference\n  }\n  customdata[v1] = customdata[v0]\n\n  return {\n    i: [v0, v1],\n    j: [v1, v2],\n    k: [v2, v3],\n    facecolor: [color, color]\n  }\n}\n\nexport const createDeck = (data, deck, selectedDeck, peerGroupFilters) => {\n  const x = []\n  const y = []\n  const z = []\n  const customdata = []\n  const length = 150\n  for (let y0 = 0; y0 < length; y0++) {\n    for (let x0 = 0; x0 < length; x0++) {\n      x.push(x0)\n      y.push(y0)\n      customdata.push({\n        cabinNumber: '',\n        status: '',\n        bookedOccupancy: '',\n        cabinCapacity: '',\n        category: '',\n        selectedPercent: '',\n        peerGroupPercent: '',\n        difference: ''\n      })\n      z.push(deck)\n    }\n  }\n  const i = []\n  const j = []\n  const k = []\n  const facecolor = []\n  const colorCount = {\n    lastFullEven: true,\n    lastFullOdd: true,\n    lastPartEven: true,\n    lastPartOdd: true,\n    lastUnbookedEven: true,\n    lastUnbookedOdd: true,\n    lastInvalidEven: true,\n    lastInvalidOdd: true\n  }\n  data.forEach(point => {\n    const coords = getPolygonCoordinates(\n      point,\n      length,\n      customdata,\n      colorCount,\n      peerGroupFilters\n    )\n    i.push(...coords.i)\n    j.push(...coords.j)\n    k.push(...coords.k)\n    facecolor.push(...coords.facecolor)\n  })\n\n  const hover =\n    deck === selectedDeck ? hoverInfo(peerGroupFilters) : { hoverinfo: 'none' }\n  const opacity = deck === selectedDeck ? 1 : 0.3\n  return {\n    x,\n    y,\n    z,\n    i,\n    j,\n    k,\n    opacity,\n    facecolor,\n    customdata,\n    ...hover,\n    flatshading: true,\n    type: 'mesh3d'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}