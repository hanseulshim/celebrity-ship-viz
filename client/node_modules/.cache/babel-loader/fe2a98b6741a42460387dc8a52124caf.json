{"ast":null,"code":"import Observable from 'zen-observable';\nimport 'symbol-observable';\n\nfunction multiplex(inner) {\n  var observers = new Set();\n  var sub = null;\n  return new Observable(function (observer) {\n    observers.add(observer);\n    sub = sub || inner.subscribe({\n      next: function next(value) {\n        observers.forEach(function (obs) {\n          return obs.next && obs.next(value);\n        });\n      },\n      error: function error(_error) {\n        observers.forEach(function (obs) {\n          return obs.error && obs.error(_error);\n        });\n      },\n      complete: function complete() {\n        observers.forEach(function (obs) {\n          return obs.complete && obs.complete();\n        });\n      }\n    });\n    return function () {\n      if (observers.delete(observer) && !observers.size && sub) {\n        sub.unsubscribe();\n        sub = null;\n      }\n    };\n  });\n}\n\nfunction asyncMap(observable, mapFn) {\n  return new Observable(function (observer) {\n    var _next = observer.next,\n        _error2 = observer.error,\n        _complete = observer.complete;\n    var activeNextCount = 0;\n    var completed = false;\n    var handler = {\n      next: function next(value) {\n        ++activeNextCount;\n        new Promise(function (resolve) {\n          resolve(mapFn(value));\n        }).then(function (result) {\n          --activeNextCount;\n          _next && _next.call(observer, result);\n          completed && handler.complete();\n        }, function (e) {\n          --activeNextCount;\n          _error2 && _error2.call(observer, e);\n        });\n      },\n      error: function error(e) {\n        _error2 && _error2.call(observer, e);\n      },\n      complete: function complete() {\n        completed = true;\n\n        if (!activeNextCount) {\n          _complete && _complete.call(observer);\n        }\n      }\n    };\n    var sub = observable.subscribe(handler);\n    return function () {\n      return sub.unsubscribe();\n    };\n  });\n}\n\nexport { asyncMap, multiplex };","map":{"version":3,"sources":["observables.js"],"names":[],"mappings":";;;AACO,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AAC7B,MAAI,SAAS,GAAG,IAAI,GAAJ,EAAhB;AACA,MAAI,GAAG,GAAG,IAAV;AACA,SAAO,IAAI,UAAJ,CAAe,UAAU,QAAV,EAAoB;AACtC,IAAA,SAAS,CAAC,GAAV,CAAc,QAAd;AACA,IAAA,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,SAAN,CAAgB;AACzB,MAAA,IAAI,EAAE,cAAU,KAAV,EAAiB;AACnB,QAAA,SAAS,CAAC,OAAV,CAAkB,UAAU,GAAV,EAAe;AAAE,iBAAO,GAAG,CAAC,IAAJ,IAAY,GAAG,CAAC,IAAJ,CAAS,KAAT,CAAnB;AAAqC,SAAxE;AACH,OAHwB;AAIzB,MAAA,KAAK,EAAE,eAAU,MAAV,EAAiB;AACpB,QAAA,SAAS,CAAC,OAAV,CAAkB,UAAU,GAAV,EAAe;AAAE,iBAAO,GAAG,CAAC,KAAJ,IAAa,GAAG,CAAC,KAAJ,CAAU,MAAV,CAApB;AAAuC,SAA1E;AACH,OANwB;AAOzB,MAAA,QAAQ,EAAE,oBAAY;AAClB,QAAA,SAAS,CAAC,OAAV,CAAkB,UAAU,GAAV,EAAe;AAAE,iBAAO,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,QAAJ,EAAvB;AAAwC,SAA3E;AACH;AATwB,KAAhB,CAAb;AAWA,WAAO,YAAY;AACf,UAAI,SAAS,CAAC,MAAV,CAAiB,QAAjB,KAA8B,CAAC,SAAS,CAAC,IAAzC,IAAiD,GAArD,EAA0D;AACtD,QAAA,GAAG,CAAC,WAAJ;AACA,QAAA,GAAG,GAAG,IAAN;AACH;AACJ,KALD;AAMH,GAnBM,CAAP;AAoBH;;AACM,SAAS,QAAT,CAAkB,UAAlB,EAA8B,KAA9B,EAAqC;AACxC,SAAO,IAAI,UAAJ,CAAe,UAAU,QAAV,EAAoB;AACtC,QAAI,KAAI,GAAG,QAAQ,CAAC,IAApB;AAAA,QAA0B,OAAK,GAAG,QAAQ,CAAC,KAA3C;AAAA,QAAkD,SAAQ,GAAG,QAAQ,CAAC,QAAtE;AACA,QAAI,eAAe,GAAG,CAAtB;AACA,QAAI,SAAS,GAAG,KAAhB;AACA,QAAI,OAAO,GAAG;AACV,MAAA,IAAI,EAAE,cAAU,KAAV,EAAiB;AACnB,UAAE,eAAF;AACA,YAAI,OAAJ,CAAY,UAAU,OAAV,EAAmB;AAC3B,UAAA,OAAO,CAAC,KAAK,CAAC,KAAD,CAAN,CAAP;AACH,SAFD,EAEG,IAFH,CAEQ,UAAU,MAAV,EAAkB;AACtB,YAAE,eAAF;AACA,UAAA,KAAI,IAAI,KAAI,CAAC,IAAL,CAAU,QAAV,EAAoB,MAApB,CAAR;AACA,UAAA,SAAS,IAAI,OAAO,CAAC,QAAR,EAAb;AACH,SAND,EAMG,UAAU,CAAV,EAAa;AACZ,YAAE,eAAF;AACA,UAAA,OAAK,IAAI,OAAK,CAAC,IAAN,CAAW,QAAX,EAAqB,CAArB,CAAT;AACH,SATD;AAUH,OAbS;AAcV,MAAA,KAAK,EAAE,eAAU,CAAV,EAAa;AAChB,QAAA,OAAK,IAAI,OAAK,CAAC,IAAN,CAAW,QAAX,EAAqB,CAArB,CAAT;AACH,OAhBS;AAiBV,MAAA,QAAQ,EAAE,oBAAY;AAClB,QAAA,SAAS,GAAG,IAAZ;;AACA,YAAI,CAAC,eAAL,EAAsB;AAClB,UAAA,SAAQ,IAAI,SAAQ,CAAC,IAAT,CAAc,QAAd,CAAZ;AACH;AACJ;AAtBS,KAAd;AAwBA,QAAI,GAAG,GAAG,UAAU,CAAC,SAAX,CAAqB,OAArB,CAAV;AACA,WAAO,YAAY;AAAE,aAAO,GAAG,CAAC,WAAJ,EAAP;AAA2B,KAAhD;AACH,GA9BM,CAAP;AA+BH","sourcesContent":["import { Observable } from './Observable';\nexport function multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nexport function asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n//# sourceMappingURL=observables.js.map"]},"metadata":{},"sourceType":"module"}