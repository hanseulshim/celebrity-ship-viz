{"ast":null,"code":"import _slicedToArray from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1;\\n  padding-right: 2em;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext,useEffect}from'react';import{store}from'context/store';import{useQuery,useLazyQuery}from'@apollo/client';import styled from'styled-components';import{GET_FIRST_SAIL_DATE,GET_VISUAL_DECK_LIST}from'graphql/queries';// Project Imports\nimport Header from'./Header';import Filters from'./filters';import SubFilters from'./filters/sub-filters';import ShipViz from'./ship-viz';import Timeline from'./filters/timeline';import Legend from'./legend';import DeckView from'./legend/DeckView';import Charts from'./charts';import{getFilterVariables}from'helper';var Container=styled.div(_templateObject());var Row=styled.div(_templateObject2());var VizContainer=styled.div(_templateObject3());var Main=function Main(){var globalState=useContext(store);var dispatch=globalState.dispatch;var _useQuery=useQuery(GET_FIRST_SAIL_DATE),data=_useQuery.data;var _useLazyQuery=useLazyQuery(GET_VISUAL_DECK_LIST,{onCompleted:function onCompleted(data){dispatch({type:'setShipData',value:data.deckVisualList});},fetchPolicy:'network-only'}),_useLazyQuery2=_slicedToArray(_useLazyQuery,1),applyFilters=_useLazyQuery2[0];useEffect(function(){if(data){dispatch({type:'setSelectedShip',value:data.firstSailDate.ship});dispatch({type:'setSelectedSailDate',value:data.firstSailDate.sailingDate});applyFilters({variables:getFilterVariables(data.firstSailDate.ship.id,data.firstSailDate.sailingDate.id,data.firstSailDate.interval)});}},[data,dispatch,applyFilters]);return React.createElement(Container,null,React.createElement(Header,null),React.createElement(Filters,null),React.createElement(Row,null,React.createElement(Charts,null),React.createElement(VizContainer,null,React.createElement(SubFilters,null),React.createElement(Row,null,React.createElement(ShipViz,null),React.createElement(Legend,null)),React.createElement(Row,{style:{padding:'2em 0em'}},React.createElement(Timeline,null),React.createElement(DeckView,null)))));};export default Main;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/index.js"],"names":["React","useContext","useEffect","store","useQuery","useLazyQuery","styled","GET_FIRST_SAIL_DATE","GET_VISUAL_DECK_LIST","Header","Filters","SubFilters","ShipViz","Timeline","Legend","DeckView","Charts","getFilterVariables","Container","div","Row","VizContainer","Main","globalState","dispatch","data","onCompleted","type","value","deckVisualList","fetchPolicy","applyFilters","firstSailDate","ship","sailingDate","variables","id","interval","padding"],"mappings":"k0BAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,OAASC,QAAT,CAAmBC,YAAnB,KAAuC,gBAAvC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,mBAAT,CAA8BC,oBAA9B,KAA0D,iBAA1D,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,OAASC,kBAAT,KAAmC,QAAnC,CAEA,GAAMC,CAAAA,SAAS,CAAGZ,MAAM,CAACa,GAAV,mBAAf,CAIA,GAAMC,CAAAA,GAAG,CAAGd,MAAM,CAACa,GAAV,oBAAT,CAGA,GAAME,CAAAA,YAAY,CAAGf,MAAM,CAACa,GAAV,oBAAlB,CAOA,GAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAMC,CAAAA,WAAW,CAAGtB,UAAU,CAACE,KAAD,CAA9B,CADiB,GAETqB,CAAAA,QAFS,CAEID,WAFJ,CAETC,QAFS,eAIApB,QAAQ,CAACG,mBAAD,CAJR,CAITkB,IAJS,WAITA,IAJS,mBAKMpB,YAAY,CAACG,oBAAD,CAAuB,CACxDkB,WAAW,CAAE,qBAAAD,IAAI,CAAI,CACnBD,QAAQ,CAAC,CAAEG,IAAI,CAAE,aAAR,CAAuBC,KAAK,CAAEH,IAAI,CAACI,cAAnC,CAAD,CAAR,CACD,CAHuD,CAIxDC,WAAW,CAAE,cAJ2C,CAAvB,CALlB,gDAKVC,YALU,mBAYjB7B,SAAS,CAAC,UAAM,CACd,GAAIuB,IAAJ,CAAU,CACRD,QAAQ,CAAC,CAAEG,IAAI,CAAE,iBAAR,CAA2BC,KAAK,CAAEH,IAAI,CAACO,aAAL,CAAmBC,IAArD,CAAD,CAAR,CACAT,QAAQ,CAAC,CACPG,IAAI,CAAE,qBADC,CAEPC,KAAK,CAAEH,IAAI,CAACO,aAAL,CAAmBE,WAFnB,CAAD,CAAR,CAIAH,YAAY,CAAC,CACXI,SAAS,CAAElB,kBAAkB,CAACQ,IAAI,CAACO,aAAL,CAAmBC,IAAnB,CAAwBG,EAAzB,CAA6BX,IAAI,CAACO,aAAL,CAAmBE,WAAnB,CAA+BE,EAA5D,CAAgEX,IAAI,CAACO,aAAL,CAAmBK,QAAnF,CADlB,CAAD,CAAZ,CAGD,CACF,CAXQ,CAWN,CAACZ,IAAD,CAAOD,QAAP,CAAiBO,YAAjB,CAXM,CAAT,CAaA,MACE,qBAAC,SAAD,MACE,oBAAC,MAAD,MADF,CAEE,oBAAC,OAAD,MAFF,CAGE,oBAAC,GAAD,MACE,oBAAC,MAAD,MADF,CAEE,oBAAC,YAAD,MACE,oBAAC,UAAD,MADF,CAEE,oBAAC,GAAD,MACE,oBAAC,OAAD,MADF,CAEE,oBAAC,MAAD,MAFF,CAFF,CAME,oBAAC,GAAD,EAAK,KAAK,CAAE,CAAEO,OAAO,CAAE,SAAX,CAAZ,EACE,oBAAC,QAAD,MADF,CAEE,oBAAC,QAAD,MAFF,CANF,CAFF,CAHF,CADF,CAoBD,CA7CD,CA+CA,cAAehB,CAAAA,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { store } from 'context/store'\nimport { useQuery, useLazyQuery } from '@apollo/client'\nimport styled from 'styled-components'\n\nimport { GET_FIRST_SAIL_DATE, GET_VISUAL_DECK_LIST } from 'graphql/queries'\n\n// Project Imports\nimport Header from './Header'\nimport Filters from './filters'\nimport SubFilters from './filters/sub-filters'\nimport ShipViz from './ship-viz'\nimport Timeline from './filters/timeline'\nimport Legend from './legend'\nimport DeckView from './legend/DeckView'\nimport Charts from './charts'\n\nimport { getFilterVariables } from 'helper'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst Row = styled.div`\n  display: flex;\n`\nconst VizContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding-right: 2em;\n`\n\nconst Main = () => {\n  const globalState = useContext(store)\n  const { dispatch } = globalState\n\n  const { data } = useQuery(GET_FIRST_SAIL_DATE)\n  const [applyFilters] = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({ type: 'setShipData', value: data.deckVisualList })\n    },\n    fetchPolicy: 'network-only'\n  })\n\n  useEffect(() => {\n    if (data) {\n      dispatch({ type: 'setSelectedShip', value: data.firstSailDate.ship })\n      dispatch({\n        type: 'setSelectedSailDate',\n        value: data.firstSailDate.sailingDate\n      })\n      applyFilters({\n        variables: getFilterVariables(data.firstSailDate.ship.id, data.firstSailDate.sailingDate.id, data.firstSailDate.interval)\n      })\n    }\n  }, [data, dispatch, applyFilters])\n\n  return (\n    <Container>\n      <Header />\n      <Filters />\n      <Row>\n        <Charts />\n        <VizContainer>\n          <SubFilters />\n          <Row>\n            <ShipViz />\n            <Legend />\n          </Row>\n          <Row style={{ padding: '2em 0em' }}>\n            <Timeline />\n            <DeckView />\n          </Row>\n        </VizContainer>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}