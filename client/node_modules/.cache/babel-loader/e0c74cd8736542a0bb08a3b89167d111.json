{"ast":null,"code":"import _slicedToArray from \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/filters/timeline/index.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { store } from 'context/store';\nimport styled from 'styled-components';\nimport { Select, Icon } from 'antd';\nimport { StyledSelect } from 'components/common/StyledComponents'; // GQL\n\nimport { GET_SNAPSHOT_INTERVAL_LIST, GET_VISUAL_DECK_LIST } from 'graphql/queries';\nimport { getFilterVariables } from 'helper'; // Project Imports\n\nimport Loader from 'components/common/Loader';\nimport Notification from 'components/common/Notification';\nconst Option = Select.Option;\nconst Container = styled.div`\n\tflex: 3;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\talign-items: center;\n`;\nconst ChangeInterval = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\nconst StyledIcon = styled(Icon)`\n\tfont-size: 2em;\n\n\t> svg {\n\t\tcolor: ${props => props.theme.babyBlue};\n\t\tcursor: pointer;\n\t}\n`;\nconst IntervalMeter = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\twidth: 90%;\n\theight: 10px;\n\tborder-radius: 3px;\n\tbackground-color: ${props => props.theme.dusk};\n`;\nconst IntervalPosition = styled.div`\n\tposition: absolute;\n\tleft: 0;\n\theight: 100%;\n\tborder-radius: 3px;\n\twidth: ${props => props.width};\n\tbackground-color: ${props => props.theme.babyBlue};\n`;\n\nconst Timeline = () => {\n  const globalState = useContext(store);\n  const state = globalState.state,\n        dispatch = globalState.dispatch;\n  const selectedShip = state.selectedShip,\n        selectedProduct = state.selectedProduct,\n        selectedItinerary = state.selectedItinerary,\n        selectedSailDate = state.selectedSailDate,\n        selectedBookingWeek = state.selectedBookingWeek,\n        peerGroupFilters = state.peerGroupFilters,\n        selectedPeerShip = state.selectedPeerShip,\n        selectedPeerProduct = state.selectedPeerProduct,\n        selectedPeerSailingDates = state.selectedPeerSailingDates,\n        filter = state.filter,\n        peerFilter = state.peerFilter,\n        filterCount = state.filterCount,\n        shipData = state.shipData;\n\n  const _useQuery = useQuery(GET_SNAPSHOT_INTERVAL_LIST, {\n    fetchPolicy: 'network-only'\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const _useLazyQuery = useLazyQuery(GET_VISUAL_DECK_LIST, {\n    onCompleted: data => {\n      dispatch({\n        type: 'setShipData',\n        value: data.deckVisualList\n      });\n    },\n    fetchPolicy: 'network-only'\n  }),\n        _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n        applyFilters = _useLazyQuery2[0];\n\n  const handleSelect = value => {\n    dispatch({\n      type: 'setSelectedBookingWeek',\n      value\n    });\n    applyFilters({\n      variables: getFilterVariables(selectedShip.id, selectedSailDate.sailingDate, value, selectedProduct.id, selectedItinerary.id, peerGroupFilters, selectedPeerShip, selectedPeerProduct.id, selectedPeerSailingDates[0], selectedPeerSailingDates[1], filter, peerFilter, filterCount)\n    });\n  };\n\n  useEffect(() => {\n    const onCompleted = data => {\n      if (data.snapshotIntervalList.length) {\n        dispatch({\n          type: 'setSelectedBookingWeek',\n          value: data.snapshotIntervalList[data.snapshotIntervalList.length - 1].interval\n        });\n      }\n    };\n\n    const onError = error => {\n      return React.createElement(Notification, {\n        type: \"error\",\n        message: error.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    };\n\n    if (onCompleted || onError) {\n      if (onCompleted && !loading && !error) {\n        onCompleted(data);\n      } else if (onError && !loading && error) {\n        onError(error);\n      }\n    }\n  }, [loading, data, error, dispatch]);\n\n  const handleStep = dir => {\n    const snapshotIntervalList = data.snapshotIntervalList;\n\n    const getCurrent = snapshot => snapshot.interval === selectedBookingWeek;\n\n    const index = snapshotIntervalList.findIndex(getCurrent);\n\n    if (dir === 'prev' && index !== 0) {\n      const interval = snapshotIntervalList[index - 1].interval;\n      dispatch({\n        type: 'setSelectedBookingWeek',\n        value: interval\n      });\n      applyFilters({\n        variables: getFilterVariables(selectedShip.id, selectedSailDate.sailingDate, interval, selectedProduct.id, selectedItinerary.id, peerGroupFilters, selectedPeerShip, selectedPeerProduct.id, selectedPeerSailingDates[0], selectedPeerSailingDates[1], filter, peerFilter, filterCount)\n      });\n    }\n\n    if (dir === 'next' && index !== snapshotIntervalList.length - 1) {\n      const interval = snapshotIntervalList[index + 1].interval;\n      dispatch({\n        type: 'setSelectedBookingWeek',\n        value: interval\n      });\n      applyFilters({\n        variables: getFilterVariables(selectedShip.id, selectedSailDate.sailingDate, interval, selectedProduct.id, selectedItinerary.id, peerGroupFilters, selectedPeerShip, selectedPeerProduct.id, selectedPeerSailingDates[0], selectedPeerSailingDates[1], filter, peerFilter, filterCount)\n      });\n    }\n  };\n\n  const getWidth = () => {\n    const snapshotIntervalList = data.snapshotIntervalList;\n    const total = snapshotIntervalList[0].interval;\n    return `${(1 - selectedBookingWeek / total) * 100}%`;\n  };\n\n  if (loading) return React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  });\n\n  if (error) {\n    return React.createElement(Notification, {\n      type: \"error\",\n      message: error.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    });\n  }\n\n  return Object.entries(shipData).length > 0 && React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(ChangeInterval, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(StyledIcon, {\n    type: \"caret-left\",\n    onClick: () => handleStep('prev'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(StyledSelect, {\n    style: {\n      width: 250\n    },\n    value: selectedBookingWeek,\n    onChange: handleSelect,\n    timeline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, data.snapshotIntervalList.map((snapshot, i) => React.createElement(Option, {\n    value: snapshot.interval,\n    key: 'interval' + i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, snapshot.intervalLabel + ' to departure'))), React.createElement(StyledIcon, {\n    type: \"caret-right\",\n    onClick: () => handleStep('next'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(IntervalMeter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(IntervalPosition, {\n    width: getWidth(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })));\n};\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/client/src/components/main/filters/timeline/index.js"],"names":["React","useContext","useEffect","useQuery","useLazyQuery","store","styled","Select","Icon","StyledSelect","GET_SNAPSHOT_INTERVAL_LIST","GET_VISUAL_DECK_LIST","getFilterVariables","Loader","Notification","Option","Container","div","ChangeInterval","StyledIcon","props","theme","babyBlue","IntervalMeter","dusk","IntervalPosition","width","Timeline","globalState","state","dispatch","selectedShip","selectedProduct","selectedItinerary","selectedSailDate","selectedBookingWeek","peerGroupFilters","selectedPeerShip","selectedPeerProduct","selectedPeerSailingDates","filter","peerFilter","filterCount","shipData","fetchPolicy","loading","error","data","onCompleted","type","value","deckVisualList","applyFilters","handleSelect","variables","id","sailingDate","snapshotIntervalList","length","interval","onError","message","handleStep","dir","getCurrent","snapshot","index","findIndex","getWidth","total","Object","entries","map","i","intervalLabel"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useQuery, useLazyQuery } from '@apollo/client'\nimport { store } from 'context/store'\nimport styled from 'styled-components'\nimport { Select, Icon } from 'antd'\nimport { StyledSelect } from 'components/common/StyledComponents'\n\n// GQL\nimport {\n\tGET_SNAPSHOT_INTERVAL_LIST,\n\tGET_VISUAL_DECK_LIST\n} from 'graphql/queries'\nimport { getFilterVariables } from 'helper'\n// Project Imports\nimport Loader from 'components/common/Loader'\nimport Notification from 'components/common/Notification'\n\nconst { Option } = Select\n\nconst Container = styled.div`\n\tflex: 3;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\talign-items: center;\n`\n\nconst ChangeInterval = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst StyledIcon = styled(Icon)`\n\tfont-size: 2em;\n\n\t> svg {\n\t\tcolor: ${(props) => props.theme.babyBlue};\n\t\tcursor: pointer;\n\t}\n`\n\nconst IntervalMeter = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\twidth: 90%;\n\theight: 10px;\n\tborder-radius: 3px;\n\tbackground-color: ${(props) => props.theme.dusk};\n`\n\nconst IntervalPosition = styled.div`\n\tposition: absolute;\n\tleft: 0;\n\theight: 100%;\n\tborder-radius: 3px;\n\twidth: ${(props) => props.width};\n\tbackground-color: ${(props) => props.theme.babyBlue};\n`\n\nconst Timeline = () => {\n\tconst globalState = useContext(store)\n\tconst { state, dispatch } = globalState\n\tconst {\n\t\tselectedShip,\n\t\tselectedProduct,\n\t\tselectedItinerary,\n\t\tselectedSailDate,\n\t\tselectedBookingWeek,\n\t\tpeerGroupFilters,\n\t\tselectedPeerShip,\n\t\tselectedPeerProduct,\n\t\tselectedPeerSailingDates,\n\t\tfilter,\n\t\tpeerFilter,\n\t\tfilterCount,\n\t\tshipData\n\t} = state\n\n\tconst { loading, error, data } = useQuery(GET_SNAPSHOT_INTERVAL_LIST, {\n\t\tfetchPolicy: 'network-only'\n\t})\n\n\tconst [applyFilters] = useLazyQuery(GET_VISUAL_DECK_LIST, {\n\t\tonCompleted: (data) => {\n\t\t\tdispatch({ type: 'setShipData', value: data.deckVisualList })\n\t\t},\n\t\tfetchPolicy: 'network-only'\n\t})\n\n\tconst handleSelect = (value) => {\n\t\tdispatch({ type: 'setSelectedBookingWeek', value })\n\n\t\tapplyFilters({\n\t\t\tvariables: getFilterVariables(\n\t\t\t\tselectedShip.id,\n\t\t\t\tselectedSailDate.sailingDate,\n\t\t\t\tvalue,\n\t\t\t\tselectedProduct.id,\n\t\t\t\tselectedItinerary.id,\n\t\t\t\tpeerGroupFilters,\n\t\t\t\tselectedPeerShip,\n\t\t\t\tselectedPeerProduct.id,\n\t\t\t\tselectedPeerSailingDates[0],\n\t\t\t\tselectedPeerSailingDates[1],\n\t\t\t\tfilter,\n\t\t\t\tpeerFilter,\n\t\t\t\tfilterCount\n\t\t\t)\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tconst onCompleted = (data) => {\n\t\t\tif (data.snapshotIntervalList.length) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'setSelectedBookingWeek',\n\t\t\t\t\tvalue:\n\t\t\t\t\t\tdata.snapshotIntervalList[data.snapshotIntervalList.length - 1]\n\t\t\t\t\t\t\t.interval\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tconst onError = (error) => {\n\t\t\treturn <Notification type=\"error\" message={error.message} />\n\t\t}\n\t\tif (onCompleted || onError) {\n\t\t\tif (onCompleted && !loading && !error) {\n\t\t\t\tonCompleted(data)\n\t\t\t} else if (onError && !loading && error) {\n\t\t\t\tonError(error)\n\t\t\t}\n\t\t}\n\t}, [loading, data, error, dispatch])\n\n\tconst handleStep = (dir) => {\n\t\tconst { snapshotIntervalList } = data\n\n\t\tconst getCurrent = (snapshot) => snapshot.interval === selectedBookingWeek\n\t\tconst index = snapshotIntervalList.findIndex(getCurrent)\n\n\t\tif (dir === 'prev' && index !== 0) {\n\t\t\tconst interval = snapshotIntervalList[index - 1].interval\n\t\t\tdispatch({\n\t\t\t\ttype: 'setSelectedBookingWeek',\n\t\t\t\tvalue: interval\n\t\t\t})\n\n\t\t\tapplyFilters({\n\t\t\t\tvariables: getFilterVariables(\n\t\t\t\t\tselectedShip.id,\n\t\t\t\t\tselectedSailDate.sailingDate,\n\t\t\t\t\tinterval,\n\t\t\t\t\tselectedProduct.id,\n\t\t\t\t\tselectedItinerary.id,\n\t\t\t\t\tpeerGroupFilters,\n\t\t\t\t\tselectedPeerShip,\n\t\t\t\t\tselectedPeerProduct.id,\n\t\t\t\t\tselectedPeerSailingDates[0],\n\t\t\t\t\tselectedPeerSailingDates[1],\n\t\t\t\t\tfilter,\n\t\t\t\t\tpeerFilter,\n\t\t\t\t\tfilterCount\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\tif (dir === 'next' && index !== snapshotIntervalList.length - 1) {\n\t\t\tconst interval = snapshotIntervalList[index + 1].interval\n\t\t\tdispatch({\n\t\t\t\ttype: 'setSelectedBookingWeek',\n\t\t\t\tvalue: interval\n\t\t\t})\n\t\t\tapplyFilters({\n\t\t\t\tvariables: getFilterVariables(\n\t\t\t\t\tselectedShip.id,\n\t\t\t\t\tselectedSailDate.sailingDate,\n\t\t\t\t\tinterval,\n\t\t\t\t\tselectedProduct.id,\n\t\t\t\t\tselectedItinerary.id,\n\t\t\t\t\tpeerGroupFilters,\n\t\t\t\t\tselectedPeerShip,\n\t\t\t\t\tselectedPeerProduct.id,\n\t\t\t\t\tselectedPeerSailingDates[0],\n\t\t\t\t\tselectedPeerSailingDates[1],\n\t\t\t\t\tfilter,\n\t\t\t\t\tpeerFilter,\n\t\t\t\t\tfilterCount\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}\n\n\tconst getWidth = () => {\n\t\tconst { snapshotIntervalList } = data\n\t\tconst total = snapshotIntervalList[0].interval\n\n\t\treturn `${(1 - selectedBookingWeek / total) * 100}%`\n\t}\n\n\tif (loading) return <Loader />\n\tif (error) {\n\t\treturn <Notification type=\"error\" message={error.message} />\n\t}\n\treturn (\n\t\tObject.entries(shipData).length > 0 && (\n\t\t\t<Container>\n\t\t\t\t<ChangeInterval>\n\t\t\t\t\t<StyledIcon type=\"caret-left\" onClick={() => handleStep('prev')} />\n\t\t\t\t\t<StyledSelect\n\t\t\t\t\t\tstyle={{ width: 250 }}\n\t\t\t\t\t\tvalue={selectedBookingWeek}\n\t\t\t\t\t\tonChange={handleSelect}\n\t\t\t\t\t\ttimeline\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.snapshotIntervalList.map((snapshot, i) => (\n\t\t\t\t\t\t\t<Option value={snapshot.interval} key={'interval' + i}>\n\t\t\t\t\t\t\t\t{snapshot.intervalLabel + ' to departure'}\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</StyledSelect>\n\t\t\t\t\t<StyledIcon type=\"caret-right\" onClick={() => handleStep('next')} />\n\t\t\t\t</ChangeInterval>\n\t\t\t\t<IntervalMeter>\n\t\t\t\t\t<IntervalPosition width={getWidth()} />\n\t\t\t\t</IntervalMeter>\n\t\t\t</Container>\n\t\t)\n\t)\n}\n\nexport default Timeline\n"]},"metadata":{},"sourceType":"module"}