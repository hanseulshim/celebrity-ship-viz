{"ast":null,"code":"import _slicedToArray from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/hanseulshim/Projects/celebrity-ship-viz/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 400px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useContext,useEffect}from'react';import styled from'styled-components';import{store}from'context/store';import{useQuery}from'@apollo/client';import{GET_CABIN_CATEGORY_CLASS_CHART}from'graphql/queries';import{categoryClassLayout}from'./config';import{createCategoryClass}from'./helper';import Loader from'components/common/Loader';import Notification from'components/common/Notification';import Plot from'react-plotly.js';import categoryClassBlurry from'assets/categoryClassBlurry.png';var Blurry=styled.img(_templateObject());var CategoryClass=function CategoryClass(){var globalState=useContext(store);var state=globalState.state;var selectedShip=state.selectedShip,selectedSailDate=state.selectedSailDate,selectedBookingWeek=state.selectedBookingWeek;var _useQuery=useQuery(GET_CABIN_CATEGORY_CLASS_CHART,{variables:{shipId:selectedShip.id,sailingDateId:selectedSailDate.id,interval:selectedBookingWeek},skip:!selectedShip.id||!selectedSailDate.id||selectedBookingWeek===null,fetchPolicy:'network-only'}),networkStatus=_useQuery.networkStatus,error=_useQuery.error,data=_useQuery.data;// local state for plot data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),plotData=_useState2[0],setPlotdata=_useState2[1];useEffect(function(){if(data){var bars=Object.keys(data.cabinCategoryClassChart);var barData=bars.filter(function(v){return v!=='__typename'&&v!=='y';}).map(function(bar){return createCategoryClass(data.cabinCategoryClassChart[bar],bar,data.cabinCategoryClassChart.y);});setPlotdata(barData);}},[selectedShip,selectedSailDate,selectedBookingWeek,data]);if(!selectedShip.id||!selectedSailDate.id||selectedBookingWeek===null){return React.createElement(Blurry,{src:categoryClassBlurry});}if(networkStatus!==2&&networkStatus!==7)return React.createElement(Loader,null);if(error)return React.createElement(Notification,{type:\"error\",message:error.message});return React.createElement(React.Fragment,null,React.createElement(Plot,{data:plotData,layout:categoryClassLayout,config:{displayModeBar:false}}));};export default CategoryClass;","map":{"version":3,"sources":["/Users/hanseulshim/Projects/celebrity-ship-viz/src/components/main/charts/CategoryClass.js"],"names":["React","useState","useContext","useEffect","styled","store","useQuery","GET_CABIN_CATEGORY_CLASS_CHART","categoryClassLayout","createCategoryClass","Loader","Notification","Plot","categoryClassBlurry","Blurry","img","CategoryClass","globalState","state","selectedShip","selectedSailDate","selectedBookingWeek","variables","shipId","id","sailingDateId","interval","skip","fetchPolicy","networkStatus","error","data","plotData","setPlotdata","bars","Object","keys","cabinCategoryClassChart","barData","filter","v","map","bar","y","message","displayModeBar"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { store } from 'context/store'\nimport { useQuery } from '@apollo/client'\nimport { GET_CABIN_CATEGORY_CLASS_CHART } from 'graphql/queries'\nimport { categoryClassLayout } from './config'\nimport { createCategoryClass } from './helper'\nimport Loader from 'components/common/Loader'\nimport Notification from 'components/common/Notification'\nimport Plot from 'react-plotly.js'\nimport categoryClassBlurry from 'assets/categoryClassBlurry.png'\n\nconst Blurry = styled.img`\n  width: 400px;\n`\n\nconst CategoryClass = () => {\n  const globalState = useContext(store)\n  const { state } = globalState\n  const { selectedShip, selectedSailDate, selectedBookingWeek } = state\n\n  const { networkStatus, error, data } = useQuery(\n    GET_CABIN_CATEGORY_CLASS_CHART,\n    {\n      variables: {\n        shipId: selectedShip.id,\n        sailingDateId: selectedSailDate.id,\n        interval: selectedBookingWeek\n      },\n      skip:\n        !selectedShip.id ||\n        !selectedSailDate.id ||\n        selectedBookingWeek === null,\n      fetchPolicy: 'network-only'\n    }\n  )\n\n  // local state for plot data\n  const [plotData, setPlotdata] = useState([])\n\n  useEffect(() => {\n    if (data) {\n      const bars = Object.keys(data.cabinCategoryClassChart)\n      const barData = bars\n        .filter(v => v !== '__typename' && v !== 'y')\n        .map(bar =>\n          createCategoryClass(\n            data.cabinCategoryClassChart[bar],\n            bar,\n            data.cabinCategoryClassChart.y\n          )\n        )\n      setPlotdata(barData)\n    }\n  }, [selectedShip, selectedSailDate, selectedBookingWeek, data])\n\n  if (\n    !selectedShip.id ||\n    !selectedSailDate.id ||\n    selectedBookingWeek === null\n  ) {\n    return <Blurry src={categoryClassBlurry} />\n  }\n  if (networkStatus !== 2 && networkStatus !== 7) return <Loader />\n  if (error) return <Notification type=\"error\" message={error.message} />\n  return (\n    <>\n      <Plot\n        data={plotData}\n        layout={categoryClassLayout}\n        config={{ displayModeBar: false }}\n      />\n    </>\n  )\n}\n\nexport default CategoryClass\n"]},"metadata":{},"sourceType":"module"}